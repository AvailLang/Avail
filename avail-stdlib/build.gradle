/*
 * build.gradle
 * Copyright Â© 1993-2021, The Avail Foundation, LLC.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *  * Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 *  * Neither the name of the copyright holder nor the names of the contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

plugins {
	id 'java'
}

repositories {
	mavenCentral()
}

dependencies {
	// Avail.
	implementation rootProject
}

// Produce a JAR with the source of every module in the standard Avail library.
def standardLibrary = "$buildDir/avail-standard-library.jar"
jar {
	archiveFileName = standardLibrary
	from('../distro/src/avail') {
		include '**/*.*'
	}
	manifest {
		attributes 'Implementation-Title': 'Avail standard library',
				'Implementation-Version': '1.5.1' // Get this from somewhere else.
	}
	duplicatesStrategy = DuplicatesStrategy.FAIL
}

// Copy the library into the distribution directory.
task releaseStandardLibrary(type: Copy) {
	group = 'release'
	from standardLibrary
	into "${rootProject.projectDir}/distro/lib"
	duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

// Update the dependencies of "assemble".
assemble.dependsOn releaseStandardLibrary
rootProject.assemble.dependsOn releaseStandardLibrary
