/*
 * package-info.java
 * Copyright Â© 1993-2019, The Avail Foundation, LLC.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of the copyright holder nor the names of the contributors
 *   may be used to endorse or promote products derived from this software
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
package com.avail.optimizer

import com.avail.descriptor.sets.SetDescriptor.Companion.emptySet
import com.avail.optimizer.values.Frame.temp
import com.avail.interpreter.levelTwo.operand.TypeRestriction.isBoxed
import com.avail.interpreter.levelTwo.operand.TypeRestriction.isUnboxedInt
import com.avail.interpreter.levelTwo.operand.TypeRestriction.isUnboxedFloat
import com.avail.optimizer.values.L2SemanticValue.Companion.constant
import com.avail.interpreter.levelTwo.operand.TypeRestriction.isImmutable
import com.avail.interpreter.levelTwo.operand.TypeRestriction.Companion.restrictionForConstant
import com.avail.descriptor.numbers.IntegerDescriptor.Companion.fromInt
import com.avail.interpreter.levelTwo.operand.TypeRestriction.withFlag
import com.avail.descriptor.numbers.DoubleDescriptor.Companion.fromDouble
import com.avail.interpreter.levelTwo.operand.L2WriteOperand.pickSemanticValue
import com.avail.optimizer.L2Synonym.semanticValues
import com.avail.interpreter.levelTwo.operand.TypeRestriction.intersectsType
import com.avail.interpreter.levelTwo.operand.TypeRestriction.containedByType
import com.avail.descriptor.representation.AvailObject.extractInt
import com.avail.interpreter.levelTwo.operand.TypeRestriction.intersectionWithType
import com.avail.descriptor.representation.AvailObject.extractDouble
import com.avail.interpreter.levelTwo.operation.L2_MOVE.kind
import com.avail.interpreter.levelTwo.register.L2Register.definitions
import com.avail.interpreter.levelTwo.operand.L2Operand.instruction
import com.avail.interpreter.levelTwo.L2Instruction.basicBlock
import com.avail.interpreter.levelTwo.operand.L2WriteOperand.retroactivelyIncludeSemanticValue
import com.avail.interpreter.levelTwo.register.L2Register.RegisterKind.readOperand
import com.avail.interpreter.levelTwo.operation.L2_MOVE.createWrite
import com.avail.interpreter.levelTwo.operand.L2ReadOperand.restriction
import com.avail.interpreter.levelTwo.operand.L2ReadOperand.type
import com.avail.interpreter.levelTwo.operand.L2ReadOperand.definitionSkippingMoves
import com.avail.interpreter.levelTwo.L2Instruction.operation
import com.avail.interpreter.levelTwo.operation.L2_CREATE_TUPLE.tupleSourceRegistersOf
import com.avail.interpreter.levelTwo.operation.L2_MOVE_CONSTANT.Companion.constantOf
import com.avail.interpreter.levelTwo.operand.TypeRestriction.Companion.restrictionForType
import com.avail.descriptor.representation.A_BasicObject.isInt
import com.avail.descriptor.representation.A_BasicObject.equals
import com.avail.descriptor.numbers.A_Number.extractInt
import com.avail.optimizer.values.L2SemanticValue.Companion.primitiveInvocation
import com.avail.interpreter.levelTwo.operand.L2PcOperand.sourceBlock
import com.avail.interpreter.levelTwo.operand.L2PcOperand.manifest
import com.avail.interpreter.levelTwo.L2Instruction.justRemoved
import com.avail.interpreter.levelTwo.operand.L2Operand.adjustedForReinsertion
import com.avail.interpreter.levelTwo.L2Instruction.altersControlFlow
import com.avail.interpreter.levelTwo.L2Instruction.operands
import com.avail.interpreter.levelTwo.L2Operation.generateReplacement
import com.avail.interpreter.levelTwo.L2Instruction.writeOperands
import com.avail.interpreter.levelTwo.operand.L2WriteOperand.register
import com.avail.descriptor.sets.A_Set.setWithElementCanDestroy
import com.avail.interpreter.levelTwo.L2Instruction.operandsDo
import com.avail.interpreter.levelTwo.operand.L2Operand.dispatchOperand
import com.avail.interpreter.levelTwo.L2Chunk.Companion.allocate
import com.avail.interpreter.levelTwo.operand.L2ReadOperand.finalIndex
import com.avail.interpreter.levelTwo.operand.L2ReadVectorOperand.elements
import com.avail.interpreter.levelTwo.operand.L2WriteOperand.finalIndex
import com.avail.interpreter.levelTwo.operand.L2PcOperand.targetBlock
import com.avail.optimizer.DeadCodeAnalyzer.analyzeReads
import com.avail.optimizer.DeadCodeAnalyzer.liveInstructions
import com.avail.interpreter.levelTwo.L2Instruction.optionalReplacementForDeadInstruction
import com.avail.interpreter.levelTwo.L2Instruction.justInserted
import com.avail.interpreter.levelTwo.L2Operation.isPhi
import com.avail.interpreter.levelTwo.L2Instruction.readOperands
import com.avail.interpreter.levelTwo.operand.L2ReadOperand.register
import com.avail.interpreter.levelTwo.operand.L2WriteOperand.semanticValues
import com.avail.interpreter.levelTwo.operand.L2ReadOperand.updateSemanticValue
import com.avail.interpreter.levelTwo.L2Instruction.edgesAndPurposesDo
import com.avail.interpreter.levelTwo.L2Instruction.writesForPurposeDo
import com.avail.interpreter.levelTwo.operand.L2PcOperand.splitEdgeWith
import com.avail.interpreter.levelTwo.L2Instruction.destinationRegisters
import com.avail.interpreter.levelTwo.L2Instruction.sourceRegisters
import com.avail.interpreter.levelTwo.operation.L2_PHI_PSEUDO_OPERATION.sourceRegisterReads
import com.avail.interpreter.levelTwo.L2Operation.goesMultipleWays
import com.avail.interpreter.levelTwo.operation.L2_MAKE_IMMUTABLE.sourceOfImmutable
import com.avail.interpreter.levelTwo.operand.L2ReadOperand.findSourceInformation
import com.avail.interpreter.levelTwo.operand.L2PcOperand.forgetRegistersInManifestsRecursively
import com.avail.interpreter.levelTwo.L2Instruction.targetEdges
import com.avail.interpreter.levelTwo.L2Instruction.isEntryPoint
import com.avail.interpreter.levelTwo.L2Instruction.hasSideEffect
import com.avail.interpreter.levelTwo.L2Operation.isPlaceholder
import com.avail.interpreter.levelTwo.operation.L2_PHI_PSEUDO_OPERATION.destinationRegisterWrite
import com.avail.interpreter.levelTwo.L2Operation.isUnconditionalJump
import com.avail.interpreter.levelTwo.operation.L2_PHI_PSEUDO_OPERATION.moveOperation
import com.avail.interpreter.levelTwo.operand.L2PcOperand.isBackward
import com.avail.interpreter.levelTwo.operation.L2_MOVE.destinationOf
import com.avail.interpreter.levelTwo.operand.L2ReadOperand.semanticValue
import com.avail.interpreter.levelTwo.register.L2Register.registerKind
import com.avail.interpreter.levelTwo.register.L2Register.finalIndex
import com.avail.interpreter.levelTwo.register.L2Register.copyAfterColoring
import com.avail.interpreter.levelTwo.L2Instruction.replaceRegisters
import com.avail.interpreter.levelTwo.register.L2Register.uses
import com.avail.interpreter.levelTwo.L2Operation.isMove
import com.avail.interpreter.levelTwo.operation.L2_JUMP.jumpTarget
import com.avail.interpreter.levelTwo.operation.L2_JUMP_BACK.jumpTarget
import com.avail.interpreter.levelTwo.operand.L2PcOperand.switchTargetBlockNonSSA
import kotlin.jvm.functions.Function1.invoke
import com.avail.utility.Strings.increaseIndentation
import com.avail.interpreter.levelTwo.L2Instruction.toString
import com.avail.interpreter.levelTwo.L2Instruction.assertHasBeenEmitted
import com.avail.performance.Statistic.record
import com.avail.interpreter.levelTwo.register.L2Register.uniqueValue
import com.avail.interpreter.levelTwo.L2Instruction.offset
import com.avail.descriptor.representation.AvailObject.equalsNil
import com.avail.descriptor.representation.A_BasicObject.equalsInstanceTypeFor
import com.avail.descriptor.numbers.A_Number.equalsInt
import com.avail.descriptor.representation.A_BasicObject.isInstanceMeta
import com.avail.descriptor.representation.AvailObject.toString
import com.avail.descriptor.functions.A_RawFunction.numSlots
import com.avail.optimizer.values.Frame.slot
import com.avail.descriptor.functions.A_RawFunction.setUpInstructionDecoder
import com.avail.descriptor.functions.CompiledCodeDescriptor.L1InstructionDecoder.pc
import com.avail.descriptor.functions.A_RawFunction.numOuters
import com.avail.descriptor.functions.A_RawFunction.outerTypeAt
import com.avail.descriptor.functions.FunctionDescriptor.Companion.createFunction
import com.avail.optimizer.values.Frame.function
import com.avail.descriptor.functions.A_RawFunction.functionType
import com.avail.optimizer.values.Frame.outer
import com.avail.interpreter.levelTwo.operand.TypeRestriction.withoutFlag
import com.avail.optimizer.values.Frame.reifiedCaller
import com.avail.interpreter.levelTwo.operand.L2WriteOperand.onlySemanticValue
import com.avail.interpreter.levelTwo.L2Chunk.ChunkEntryPoint.offsetInDefaultChunk
import com.avail.descriptor.representation.A_BasicObject.traversed
import com.avail.descriptor.representation.AbstractAvailObject.descriptor
import kotlin.jvm.functions.Function0.invoke
import com.avail.descriptor.bundles.A_Bundle.Companion.message
import com.avail.descriptor.atoms.A_Atom.Companion.atomName
import com.avail.descriptor.bundles.A_Bundle.Companion.bundleMethod
import com.avail.descriptor.methods.A_Method.numArgs
import com.avail.descriptor.methods.A_Method.testingTree
import com.avail.descriptor.methods.A_Method.definitionsTuple
import com.avail.descriptor.methods.A_Method.lookupByTypesFromTuple
import com.avail.descriptor.methods.A_Definition.isMethodDefinition
import com.avail.descriptor.methods.A_Definition.bodySignature
import com.avail.dispatch.LookupTreeTraverser.traverseEntireTree
import com.avail.descriptor.methods.A_Method.definitionsAtOrBelow
import com.avail.descriptor.methods.A_Definition.bodyBlock
import com.avail.descriptor.functions.A_Function.code
import com.avail.descriptor.functions.A_RawFunction.primitive
import com.avail.interpreter.Primitive.returnTypeGuaranteedByVM
import com.avail.interpreter.levelTwo.operand.TypeRestriction.enumerationValuesOrNull
import com.avail.descriptor.sets.A_Set.iterator
import com.avail.interpreter.levelTwo.operand.TypeRestriction.metaRestriction
import com.avail.descriptor.representation.A_BasicObject.isBoolean
import com.avail.descriptor.atoms.AtomDescriptor.Companion.trueObject
import com.avail.interpreter.levelTwo.operation.L2_RUN_INFALLIBLE_PRIMITIVE.Companion.primitiveOf
import com.avail.interpreter.levelTwo.operation.L2_RUN_INFALLIBLE_PRIMITIVE.Companion.argsOf
import com.avail.interpreter.levelTwo.operand.L2ReadOperand.constantOrNull
import com.avail.interpreter.levelTwo.L2Instruction.operand
import com.avail.interpreter.levelTwo.operation.L2_GET_TYPE.sourceValueOf
import com.avail.interpreter.levelTwo.operand.TypeRestriction.intersection
import com.avail.interpreter.Primitive.fallibilityForArgumentTypes
import com.avail.interpreter.levelTwo.operation.L2_RUN_INFALLIBLE_PRIMITIVE.Companion.forPrimitive
import com.avail.interpreter.Primitive.hasFlag
import com.avail.interpreter.execution.Interpreter.Companion.log
import com.avail.interpreter.Primitive.fieldName
import com.avail.interpreter.Primitive.attempt
import com.avail.interpreter.execution.Interpreter.getLatestResult
import com.avail.descriptor.representation.AvailObject.makeImmutable
import com.avail.interpreter.Primitive.tryToGenerateSpecialPrimitiveInvocation
import com.avail.interpreter.levelTwo.L2Operation.getConstantCodeFrom
import com.avail.interpreter.levelTwo.operand.TypeRestriction.union
import com.avail.descriptor.sets.SetDescriptor.Companion.setFromCollection
import com.avail.exceptions.AvailErrorCode.numericCode
import com.avail.interpreter.levelTwo.L2Operation.isVariableGet
import com.avail.interpreter.levelTwo.L2Operation.isVariableSet
import com.avail.interpreter.execution.Interpreter.Companion.assignmentFunction
import com.avail.descriptor.functions.A_RawFunction.countdownToReoptimize
import com.avail.interpreter.levelTwo.L2Chunk.Companion.countdownForNewlyOptimizedCode
import com.avail.descriptor.functions.A_RawFunction.numArgs
import com.avail.descriptor.functions.A_RawFunction.methodName
import com.avail.descriptor.functions.A_RawFunction.numLocals
import com.avail.descriptor.functions.A_RawFunction.localTypeAt
import com.avail.descriptor.functions.CompiledCodeDescriptor.L1InstructionDecoder.atEnd
import com.avail.descriptor.functions.CompiledCodeDescriptor.L1InstructionDecoder.getOperation
import com.avail.interpreter.levelOne.L1Operation.dispatch
import com.avail.interpreter.execution.Interpreter.latestResultOrNull
import com.avail.interpreter.execution.Interpreter.setLatestResult
import com.avail.descriptor.sets.A_Set.setSize
import com.avail.descriptor.functions.A_RawFunction.startingChunk
import com.avail.descriptor.functions.A_RawFunction.literalAt
import com.avail.descriptor.functions.CompiledCodeDescriptor.L1InstructionDecoder.getOperand
import com.avail.optimizer.values.Frame.label
import com.avail.interpreter.levelTwo.operand.TypeRestriction.Companion.restriction
import com.avail.descriptor.representation.A_BasicObject.isInitializedWriteOnceVariable
import com.avail.descriptor.variables.A_Variable.valueWasStablyComputed
import com.avail.descriptor.variables.A_Variable.value
import com.avail.interpreter.levelTwo.operation.L2_PHI_PSEUDO_OPERATION.updateLoopHeadPhi
import com.avail.interpreter.levelTwo.operation.L2_PHI_PSEUDO_OPERATION.withoutIndex
import com.avail.interpreter.levelTwo.L2Instruction.justAdded
import com.avail.interpreter.levelTwo.L2Instruction.shouldEmit
import com.avail.interpreter.levelTwo.L2Instruction.setOffset
import com.avail.descriptor.representation.AvailObject.caller
import com.avail.descriptor.representation.A_BasicObject.equalsNil
import com.avail.interpreter.execution.Interpreter.Companion.traceL2
import com.avail.descriptor.representation.AvailObject.levelTwoChunk
import com.avail.descriptor.representation.AvailObject.levelTwoOffset
import com.avail.descriptor.representation.AvailObject.replacingCaller
import com.avail.interpreter.execution.Interpreter.getReifiedContinuation
import com.avail.interpreter.execution.Interpreter.setReifiedContinuation
import com.avail.descriptor.functions.A_Continuation.function
import com.avail.descriptor.functions.A_Continuation.levelTwoChunk
import com.avail.interpreter.execution.Interpreter.setOffset
import com.avail.descriptor.functions.A_Continuation.levelTwoOffset
import com.avail.interpreter.levelTwo.L2Chunk.runChunk
import com.avail.optimizer.jvm.CheckedMethod.Companion.instanceMethod
import com.avail.optimizer.L2Synonym.pickSemanticValue
import com.avail.interpreter.levelTwo.operand.TypeRestriction.minusType
import com.avail.interpreter.levelTwo.operand.L2Operand.instructionHasBeenEmitted
import com.avail.interpreter.levelTwo.operand.L2WriteOperand.registerKind
import com.avail.interpreter.levelTwo.register.L2Register.RegisterKind.restrictionFlag
import com.avail.interpreter.levelTwo.operand.L2WriteOperand.restriction
import com.avail.interpreter.levelTwo.operand.TypeRestriction.restrictingKindsTo
import com.avail.optimizer.L2Synonym.transform
import com.avail.interpreter.levelTwo.operand.TypeRestriction.kinds
import com.avail.interpreter.levelTwo.register.L2Register.setFinalIndex
import com.avail.interpreter.levelTwo.operation.L2_PHI_PSEUDO_OPERATION.predecessorBlocksForUseOf
import com.avail.optimizer.annotations.Requires.value
import com.avail.optimizer.annotations.RequiresNot.value
import com.avail.optimizer.annotations.Sets.value
import com.avail.optimizer.annotations.Clears.value
import com.avail.utility.dot.DotWriter.blockComment
import com.avail.utility.dot.DotWriter.copyrightOwner
import com.avail.utility.Strings.repeated
import com.avail.interpreter.levelTwo.operand.L2Operand.operandType
import com.avail.utility.dot.DotWriter.AttributeWriter.adjust
import com.avail.interpreter.levelTwo.operand.L2Operand.isMisconnected
import com.avail.interpreter.levelTwo.operand.L2Operand.toString
import com.avail.interpreter.levelTwo.operand.L2PcOperand.offset
import com.avail.interpreter.levelTwo.L2Operation.appendToWithWarnings
import com.avail.interpreter.levelTwo.L2Instruction.appendToWithWarnings
import com.avail.utility.dot.DotWriter.GraphWriter.node
import com.avail.utility.dot.DotWriter.AttributeWriter.attribute
import com.avail.interpreter.levelTwo.L2Operation.operandTypes
import com.avail.interpreter.levelTwo.L2NamedOperandType.name
import com.avail.interpreter.levelTwo.register.L2Register.toString
import com.avail.optimizer.L2Synonym.toString
import com.avail.interpreter.levelTwo.operand.TypeRestriction.toString
import com.avail.utility.dot.DotWriter.GraphWriter.edge
import com.avail.utility.dot.DotWriter.Companion.node
import com.avail.interpreter.levelTwo.L2NamedOperandType.purpose
import com.avail.utility.dot.DotWriter.GraphWriter.subgraph
import com.avail.utility.dot.DotWriter.GraphWriter.defaultAttributeBlock
import com.avail.utility.dot.DotWriter.graph
import com.avail.optimizer.L2Generator.OptimizationLevel
import com.avail.descriptor.sets.A_Set
import com.avail.descriptor.sets.SetDescriptor
import com.avail.optimizer.L2BasicBlock
import com.avail.interpreter.levelTwo.L2Chunk
import com.avail.optimizer.L2ValueManifest
import com.avail.optimizer.L2ControlFlowGraph
import com.avail.utility.Nulls
import com.avail.interpreter.levelTwo.operand.L2PcOperand
import com.avail.optimizer.L2Generator
import com.avail.interpreter.levelTwo.operand.TypeRestriction
import com.avail.interpreter.levelTwo.operand.L2WriteBoxedOperand
import com.avail.optimizer.values.L2SemanticValue
import com.avail.interpreter.levelTwo.register.L2BoxedRegister
import com.avail.interpreter.levelTwo.operand.L2WriteIntOperand
import com.avail.interpreter.levelTwo.register.L2IntRegister
import com.avail.interpreter.levelTwo.operand.L2WriteFloatOperand
import com.avail.interpreter.levelTwo.register.L2FloatRegister
import com.avail.descriptor.representation.A_BasicObject
import com.avail.interpreter.levelTwo.operand.L2ReadBoxedOperand
import com.avail.interpreter.levelTwo.operand.TypeRestriction.RestrictionFlagEncoding
import com.avail.interpreter.levelTwo.operation.L2_MOVE_CONSTANT
import com.avail.interpreter.levelTwo.operand.L2ConstantOperand
import com.avail.interpreter.levelTwo.operand.L2ReadIntOperand
import com.avail.descriptor.numbers.A_Number
import com.avail.descriptor.numbers.IntegerDescriptor
import com.avail.optimizer.L2Synonym
import com.avail.interpreter.levelTwo.operand.L2IntImmediateOperand
import com.avail.interpreter.levelTwo.operand.L2ReadFloatOperand
import com.avail.descriptor.numbers.DoubleDescriptor
import com.avail.interpreter.levelTwo.operand.L2FloatImmediateOperand
import com.avail.interpreter.levelTwo.operation.L2_BOX_INT
import com.avail.interpreter.levelTwo.operation.L2_BOX_FLOAT
import com.avail.descriptor.types.IntegerRangeTypeDescriptor
import com.avail.interpreter.levelTwo.operation.L2_UNBOX_INT
import com.avail.interpreter.levelTwo.operation.L2_JUMP_IF_UNBOX_INT
import com.avail.descriptor.types.TypeDescriptor
import com.avail.interpreter.levelTwo.operation.L2_UNBOX_FLOAT
import com.avail.interpreter.levelTwo.operation.L2_JUMP_IF_UNBOX_FLOAT
import com.avail.interpreter.levelTwo.register.L2Register
import com.avail.interpreter.levelTwo.operand.L2ReadOperand
import com.avail.interpreter.levelTwo.operand.L2WriteOperand
import com.avail.interpreter.levelTwo.operation.L2_MOVE
import com.avail.utility.Casts
import com.avail.interpreter.levelTwo.L2Instruction
import com.avail.interpreter.levelTwo.operation.L2_MAKE_IMMUTABLE
import com.avail.descriptor.types.A_Type
import com.avail.interpreter.levelTwo.operation.L2_CREATE_TUPLE
import com.avail.descriptor.tuples.A_Tuple
import com.avail.interpreter.levelTwo.operation.L2_TUPLE_AT_CONSTANT
import com.avail.descriptor.tuples.TupleDescriptor
import java.util.stream.Collectors
import com.avail.interpreter.Primitive
import com.avail.interpreter.levelTwo.operation.L2_JUMP
import com.avail.interpreter.levelTwo.L2Operation
import com.avail.interpreter.levelTwo.operand.L2Operand
import java.util.Arrays
import java.util.function.IntFunction
import com.avail.descriptor.methods.A_ChunkDependable
import com.avail.descriptor.functions.A_RawFunction
import com.avail.optimizer.L2Generator.RegisterCounter
import com.avail.interpreter.levelTwo.L2OperandDispatcher
import com.avail.interpreter.levelTwo.operand.L2CommentOperand
import com.avail.interpreter.levelTwo.operand.L2PrimitiveOperand
import java.lang.Math
import com.avail.interpreter.levelTwo.operand.L2ReadBoxedVectorOperand
import com.avail.interpreter.levelTwo.operand.L2ReadIntVectorOperand
import com.avail.interpreter.levelTwo.operand.L2ReadFloatVectorOperand
import com.avail.interpreter.levelTwo.operand.L2SelectorOperand
import com.avail.performance.StatisticReport
import com.avail.optimizer.L2RegisterColorer
import com.avail.optimizer.L2ControlFlowGraph.StateFlag
import java.util.Deque
import java.util.function.Supplier
import java.util.HashSet
import com.avail.optimizer.DataCouplingMode
import com.avail.optimizer.DeadCodeAnalyzer
import java.util.HashMap
import java.util.function.BiConsumer
import com.avail.utility.MutableInt
import com.avail.interpreter.levelTwo.operation.L2_PHI_PSEUDO_OPERATION
import com.avail.optimizer.L2Optimizer
import com.avail.optimizer.L2Entity
import com.avail.interpreter.levelTwo.register.L2Register.RegisterKind
import com.avail.interpreter.levelTwo.operation.L2_JUMP_BACK
import com.avail.optimizer.L2Optimizer.UsedRegisters
import com.avail.interpreter.levelTwo.operand.L2ReadVectorOperand
import com.avail.AvailRuntimeSupport
import com.avail.optimizer.OptimizationPhase
import com.avail.optimizer.RegisterState
import com.avail.descriptor.representation.AvailObject
import com.avail.descriptor.types.AbstractEnumerationTypeDescriptor
import com.avail.descriptor.representation.NilDescriptor
import com.avail.utility.PrefixSharingList
import com.avail.optimizer.RegisterSet
import java.util.Objects
import java.util.TreeMap
import com.avail.interpreter.levelOne.L1OperationDispatcher
import com.avail.descriptor.functions.CompiledCodeDescriptor.L1InstructionDecoder
import com.avail.descriptor.functions.A_Function
import com.avail.interpreter.levelTwo.operation.L2_GET_CURRENT_FUNCTION
import com.avail.interpreter.levelTwo.operation.L2_MOVE_OUTER_VARIABLE
import com.avail.interpreter.levelTwo.operation.L2_GET_LATEST_RETURN_VALUE
import com.avail.descriptor.types.FunctionTypeDescriptor
import com.avail.interpreter.levelTwo.operation.L2_GET_RETURNING_FUNCTION
import com.avail.interpreter.levelTwo.L2Chunk.ChunkEntryPoint
import com.avail.descriptor.types.ContinuationTypeDescriptor
import com.avail.interpreter.levelTwo.operation.L2_SAVE_ALL_AND_PC_TO_INT
import com.avail.interpreter.levelTwo.operation.L2_GET_CURRENT_CONTINUATION
import com.avail.interpreter.levelTwo.operation.L2_CREATE_CONTINUATION
import com.avail.interpreter.levelTwo.operation.L2_SET_CONTINUATION
import com.avail.interpreter.levelTwo.operation.L2_RETURN_FROM_REIFICATION_HANDLER
import com.avail.interpreter.levelTwo.operation.L2_ENTER_L2_CHUNK
import com.avail.descriptor.tuples.ObjectTupleDescriptor
import com.avail.descriptor.types.InstanceMetaDescriptor
import com.avail.descriptor.types.VariableTypeDescriptor
import com.avail.descriptor.types.BottomTypeDescriptor
import com.avail.interpreter.levelTwo.operation.L2_GET_INVALID_MESSAGE_RESULT_FUNCTION
import com.avail.descriptor.bundles.A_Bundle
import com.avail.descriptor.atoms.A_Atom
import com.avail.optimizer.L2ControlFlowGraph.ZoneType
import com.avail.optimizer.L1Translator.CallSiteHelper
import com.avail.descriptor.methods.A_Method
import com.avail.dispatch.LookupTree
import com.avail.descriptor.methods.A_Definition
import com.avail.exceptions.MethodDefinitionException
import com.avail.dispatch.LookupTreeTraverser
import com.avail.dispatch.LookupTreeAdaptor.UnusedMemento
import com.avail.optimizer.L1Translator.InternalNodeMemento
import com.avail.interpreter.levelTwo.operation.L2_GET_TYPE
import com.avail.interpreter.levelTwo.operation.L2_TYPE_UNION
import com.avail.interpreter.levelTwo.operation.L2_JUMP_IF_SUBTYPE_OF_CONSTANT
import com.avail.descriptor.atoms.AtomDescriptor
import com.avail.interpreter.levelTwo.operation.L2_RUN_INFALLIBLE_PRIMITIVE
import com.avail.interpreter.primitive.general.P_Equality
import com.avail.interpreter.levelTwo.operation.L2_JUMP_IF_OBJECTS_EQUAL
import com.avail.interpreter.levelTwo.operation.L2_JUMP_IF_SUBTYPE_OF_OBJECT
import com.avail.interpreter.levelTwo.operation.L2_JUMP_IF_KIND_OF_OBJECT
import com.avail.interpreter.levelTwo.operation.L2_JUMP_IF_EQUALS_CONSTANT
import com.avail.optimizer.L1Translator
import com.avail.interpreter.Primitive.Fallibility
import com.avail.interpreter.levelTwo.operation.L2_INVOKE_CONSTANT_FUNCTION
import com.avail.interpreter.levelTwo.operation.L2_INVOKE
import com.avail.interpreter.levelTwo.operation.L2_CREATE_VARIABLE
import com.avail.interpreter.levelTwo.operation.L2_SET_VARIABLE_NO_CHECK
import com.avail.interpreter.levelTwo.operation.L2_JUMP_IF_KIND_OF_CONSTANT
import com.avail.exceptions.AvailErrorCode
import com.avail.interpreter.levelTwo.operation.L2_LOOKUP_BY_VALUES
import com.avail.interpreter.levelTwo.operation.L2_LOOKUP_BY_TYPES
import com.avail.AvailRuntime.HookType
import com.avail.interpreter.levelTwo.operation.L2_GET_INVALID_MESSAGE_SEND_FUNCTION
import com.avail.descriptor.types.TupleTypeDescriptor
import com.avail.interpreter.levelTwo.operation.L2_JUMP_IF_INTERRUPT
import com.avail.interpreter.levelTwo.operation.L2_REIFY
import com.avail.interpreter.levelTwo.operation.L2_REIFY.StatisticCategory
import com.avail.interpreter.levelTwo.operation.L2_GET_UNASSIGNED_VARIABLE_READ_FUNCTION
import com.avail.interpreter.levelTwo.operation.L2_GET_IMPLICIT_OBSERVE_FUNCTION
import com.avail.interpreter.levelTwo.operation.L2_TRY_PRIMITIVE
import com.avail.interpreter.levelTwo.operation.L2_DECREMENT_COUNTER_AND_REOPTIMIZE_ON_ZERO
import com.avail.interpreter.levelTwo.operation.L2_GET_ARGUMENT
import com.avail.interpreter.levelOne.L1Operation
import com.avail.interpreter.levelTwo.operation.L2_RETURN
import com.avail.interpreter.levelTwo.operation.L2_UNREACHABLE_CODE
import com.avail.interpreter.levelTwo.operation.L2_CREATE_FUNCTION
import com.avail.interpreter.levelTwo.operation.L2_GET_VARIABLE_CLEARING
import com.avail.interpreter.levelTwo.operation.L2_GET_VARIABLE
import com.avail.interpreter.levelTwo.operation.L2_VIRTUAL_CREATE_LABEL
import com.avail.descriptor.variables.A_Variable
import com.avail.interpreter.levelTwo.operation.L2_TRY_OPTIONAL_PRIMITIVE
import com.avail.interpreter.levelTwo.operation.L2_PREPARE_NEW_FRAME_FOR_L1
import com.avail.interpreter.levelTwo.operation.L2_INTERPRET_LEVEL_ONE
import com.avail.interpreter.levelTwo.operation.L2_REENTER_L1_CHUNK_FROM_CALL
import com.avail.interpreter.levelTwo.operation.L2_REENTER_L1_CHUNK_FROM_INTERRUPT
import kotlin.jvm.JvmOverloads
import com.avail.utility.evaluation.Continuation1NotNull
import com.avail.optimizer.jvm.ReferencedInGeneratedCode
import com.avail.optimizer.StackReifier
import com.avail.descriptor.functions.A_Continuation
import com.avail.optimizer.jvm.CheckedMethod
import com.avail.optimizer.values.L2SemanticPrimitiveInvocation
import java.lang.RuntimeException
import java.util.function.BinaryOperator
import java.util.function.BiFunction
import java.util.EnumSet
import com.avail.optimizer.L2RegisterColorer.RegisterGroup
import com.avail.utility.evaluation.Continuation1
import com.avail.utility.evaluation.Continuation2
import java.lang.NoSuchFieldException
import com.avail.optimizer.annotations.Requires
import com.avail.optimizer.annotations.RequiresNot
import com.avail.optimizer.annotations.Sets
import com.avail.optimizer.annotations.Clears
import com.avail.optimizer.L2ControlFlowGraphVisualizer
import com.avail.optimizer.L2ControlFlowGraph.StateFlag.IS_SSA
import java.lang.Appendable
import kotlin.jvm.Throws
import java.io.IOException
import com.avail.utility.dot.DotWriter
import java.time.LocalDateTime
import java.time.Instant
import java.time.ZoneId
import com.avail.utility.dot.DotWriter.GraphWriter
import com.avail.utility.CheckedConsumer
import com.avail.interpreter.levelTwo.L2NamedOperandType
import java.util.function.ToIntFunction
import com.avail.utility.dot.DotWriter.CompassPoint
import com.avail.utility.dot.DotWriter.DefaultAttributeBlockType
import com.avail.interpreter.levelTwo.L2OperandType
