/*
 * build.gradle
 * Copyright Â© 1993-2021, The Avail Foundation, LLC.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of the copyright holder nor the names of the contributors
 *   may be used to endorse or promote products derived from this software
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
plugins {
	id 'java'
	id 'org.jetbrains.kotlin.jvm'
	id 'com.github.johnrengelman.shadow'
	id 'org.jetbrains.dokka'
}

compileKotlin {
	kotlinOptions {
		jvmTarget = "1.8"
		freeCompilerArgs = ['-Xjvm-default=compatibility']
		languageVersion = "1.5"
	}
}

compileTestKotlin {
	kotlinOptions {
		jvmTarget = "1.8"
		freeCompilerArgs = ['-Xjvm-default=compatibility']
		languageVersion = "1.5"
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Avail.
	implementation rootProject

	// Kotlin.
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

// Update the dependencies of "classes".
classes.dependsOn generateBuildTime

// Produce a fat JAR for the IndexFileAnalyzer.
jar {
	manifest {
		attributes 'Main-Class': 'com.avail.tools.fileanalyzer.IndexedFileAnalyzer'
	}
	duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

// Copy the JAR into the distribution directory.
task releaseIndexedFileAnalyzer(type: Copy) {
	group = 'release'
	from shadowJar.outputs.files
	into file("${rootProject.projectDir}/distro/lib")
	rename '.*', 'indexed-file-analyzer.jar'
	duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

// Update the dependencies of "assemble".
assemble.dependsOn releaseIndexedFileAnalyzer

// Generate documentation
dokkaGfm {
	// Outputting to documentation/docs/src-docs directly causes the contents of
	// the directory to be deleted. Moving the directory post generation is the
	// work around.
	doLast {
		ant.move file: "${buildDir}/dokka/indexed-file-analyzer",
			todir: "../documentation/docs/src_docs"
	}
}

dokkaHtml {
	outputDirectory = file "$buildDir/dokka"
}
