/*
 * Fallible Primitives.avail
 * Copyright (c) 2011, Mark van Gulik.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of the copyright holder nor the names of the contributors
 *   may be used to endorse or promote products derived from this software
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * GENERATED FILE
 * * Generator: com.avail.tools.bootstrap.BootstrapGenerator
 * * Last Generated On: 2011.12.17 17:05:17.002 -0600
 *
 * DO NOT MODIFY MANUALLY. ALL MANUAL CHANGES WILL BE LOST.
 */

System Module "Fallible Primitives"
Versions
	"dev"
Extends
	"Origin"
Uses
Names
	/* 503 */ "",
	/*  51 */ "$_",
	/*  13 */ "&:=_",
	/*  10 */ "*_",
	/*  11 */ "*_:=_",
	/*  12 */ "*_:=nil",
	/*  17 */ "*_=nil",
	/*  72 */ "_'s compiled code",
	/*  50 */ "_'s function type",
	/*  29 */ "_'s instances",
	/*   8 */ "_'s lower bound",
	/*  67 */ "_'s name",
	/*  69 */ "_'s names",
	/*  73 */ "_'s outer variables",
	/*  36 */ "_'s parameter_'s type",
	/*  35 */ "_'s parameters' type",
	/*  20 */ "_'s priority",
	/*  26 */ "_'s process variable_",
	/*  14 */ "_'s read type",
	/*  37 */ "_'s return type",
	/*  30 */ "_'s type",
	/*   9 */ "_'s upper bound",
	/*  19 */ "_'s write type",
	/*   1 */ "_+_",
	/*   2 */ "_-_",
	/*   5 */ "_<_",
	/*  60 */ "_=_",
	/*  64 */ "_as map",
	/*  63 */ "_as object type",
	/*  61 */ "_as private unvalidated object",
	/*   3 */ "_×_",
	/*   4 */ "_÷_",
	/*  32 */ "_∩_",
	/*  31 */ "_∪_",
	/*  33 */ "_≤_",
	/*  34 */ "block type taking_and returning_",
	/*  25 */ "current process",
	/*  18 */ "eject_",
	/*  66 */ "enum of_",
	/*  57 */ "exit_with_",
	/*  68 */ "give type_the name_",
	/*  44 */ "if_then_",
	/*  43 */ "if_then_else_",
	/*  45 */ "ignore_and evaluate_",
	/*  40 */ "invoke_with_",
	/*  16 */ "new container of_",
	/*   7 */ "range from_inclusive_to_inclusive_",
	/*  58 */ "restart_",
	/*  56 */ "restart_with_",
	/*  23 */ "resume_",
	/*  21 */ "set_'s priority to_",
	/*  27 */ "set_'s process variable_to_",
	/*  22 */ "suspend_",
	/*  15 */ "swap_and_",
	/*  24 */ "terminate_",
	/*  38 */ "union of types in_",
	/*  39 */ "⊶[…]→_"
Body

