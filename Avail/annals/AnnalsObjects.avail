/*
 * This document is intended to contain the frontline recipients of module data,
 * not to be the ultimate/final storage solution.
 */



// Name is a contextually required field for many tags.
_name ::= $"name";
Private method "name" is [ _name ];
Private method "named⁇,_" is
[
	elementType : element's type
|
	extend elementType with name : string
];

// Target type is a contextually required field for many tags.
_targetType ::= $"target type";
Private method "target type" is [ _targetType ];
Private method "typed⁇,_" is
[
	elementType : element's type
|
	extend elementType with target type : string
];

//Description is an optional field for many tags.
_description ::= $"description";
Private method "description" is [ _description ];
Private method "described_" is
[
	elementType : element's type
|
	extend elementType with description : string
];


/////////////////////////// TAGS /////////////////////////////

Explicit class "element" extends object;

_targetMethod ::= $"target method";
Private method "target method" is [ _targetMethod ];
Explicit class "@method" extends element
	with fields
		target method : string;

_public ::= $"public";
Private method "public" is [ _public ];
Explicit class "@public" extends element
	with fields
		visibility : boolean;

_category ::= $"category";
Private method "category" is [ _category ];
Explicit class "@category" extends element
	with fields
		category : string;

Explicit class "@see" extends element
	with fields
		description : string;

Explicit class "@param" extends element;

Explicit class "@returns" extends element;

Explicit class "@raises" extends element
	with fields
		target type : string;

Explicit class "@author" extends element
	with fields
		name : string;

Explicit class "@forbids" extends element
	with fields
		parameter number : natural number,
		forbidden expressions : {string…|0..∞};
		//Start at 0 so @forbids can be used for each parameter to collect expressions as they are found


Category overview
/*
 * [r] - required
 * [o] - optional
 * [d] - presence depends on the method
 */

Explicit class "Method" extends element
	with fields
		general information : 		<Overview…					|0..1>,
		grammatical restriction : 	<Grammatical Restriction…	|0..∞>,
		implementations : 			<Implementation…			|0..∞>,
		semantic restrictions : 	<Semantic Restriction…		|0..∞>;

		
/* METHOD OVERVIEW-LEVEL DOCUMENTATION
 * 
 * [o] Method description coming before all the tags.
 * 
 * [r] @method "method name_,_"
 * [o] @public
 * [o] @category Category1
 * [o] @category Category2
 * [o] @see First reference elsewhere; possibly including a link.
 * [o] @see Second reference elsewhere; possibly including a link.
 * [d] @param "Param1" Optional description of Param1.
 * [d] @param "Param2" Optional description of Param2.
 * [d] @returns Optional description of return.
 * [d] @raises "excep1Type" Optional description of excep1.
 * [d] @raises "excep2Type" Optional description of excep2.
 * [o] @author John Doe
 * [o] @author Jane Smith
 */
Explicit class "Overview" extends element
	with fields
		description : 				string,
		method : 					@method,
		visibility : 				@public,
		categories : 				<@category…					|0..∞>,
		references : 				<@see…						|0..∞>,
		parameters : 				<named, described @param…	|0..∞>,
		return : 					<described @returns…		|0..∞>,
		exceptions : 				<described @raises…			|0..∞>,
		authors : 					<@author…					|0..∞>;

/* GRAMMATICAL RESTRICTION DOCUMENTATION
 * 
 * [o] Restriction description coming before all the tags.
 * 
 * [r] @method "method name_,_"
 * [r] @forbids #1 "expression 1" "expression 2"
 * [r] @forbids #2 "something"
 * [o] @author John Doe
 * [o] @author Jane Smith
 */
Explicit class "Grammatical Restriction" extends element
	with fields
		description : 	string,
		method : 		@method,
		restrictions : 	<@forbids…	|1..∞>, // Must be usable for 0-parm methods
		authors : 		<@author…	|0..∞>;


/* IMPLEMENTATION DOCUMENTATION
 * 
 * [o] Implmentation description coming before all the tags.
 * 
 * [r] @method "method name_,_"
 * [o] @category Category1
 * [o] @category Category2
 * [o] @see First reference elsewhere; possibly including a link.
 * [o] @see Second reference elsewhere; possibly including a link.
 * [d] @param "Param1" "param1Type" Optional description of Param1.
 * [d] @param "Param2" "param2Type" Optional description of Param2.
 * [d] @returns "returnType" Optional description of return.
 * [d] @raises "excep1Type" Optional description of excep1.
 * [d] @raises "excep2Type" Optional description of excep2.
 * [o] @author John Doe
 * [o] @author Jane Smith
 */
Explicit class "Implementation" extends element
	with fields
		description : 	string,
		method : 		@method,
		categories : 	<@category…						|0..∞>,
		references : 	<@see…							|0..∞>,
		parameters : 	<named, typed, described @param…|0..∞>,
		return : 		<typed, described @returns…		|0..∞>,
		exceptions : 	<described @raises…				|0..∞>,
		authors : 		<@author…						|0..∞>;


/* SEMANTIC RESTRICTION DOCUMENTATION
 * 
 * [o] Restriction description coming before all the tags.
 * 
 * [r] @method "method name_,_"
 * [r] @restricts "argument 1 type" description
 * [r] @restricts "argument 2 type" description
 * [o] @author John Doe
 * [o] @author Jane Smith
 */
Explicit class "Semantic Restriction" extends element
	with fields
		description : 	string,
		method : 		@method,
		restrictions : 	<typed, described @restricts…	|1..∞>,
		authors : 		<@author…						|0..∞>;


////////////////////// OLD OR TESTY STUFF //////////////////////////////


// ADD MODULE NAME TO ALL ELEMENTS
@module "asdf" Description of the module itself

		
r ::= a @raises with 
	target type := "exception";
d ::= a described @raises with
	target type := "exception",
	description := "If anything goes wrong.";

d2 ::= d's target type ::= "element-access exception";
Assert: d2's target type = "element-access exception";
Assert: d2's description = "If anything goes wrong."

exception ::= <type, description…|1..2>;
raises ::= <exception…|0..∞>;
// One or more exceptions raised.


{natural number→string|0..∞}

forbiddenExpressions ::= <expression…|0..∞>
// The index of the restricted position in @forbids maps to the list of restrictions for that position

implementationParameter ::= <name, type, description…|2..3>;
implementationParameters ::= <implementationParameter…|0..∞>;
implementation ::=
	<	name,
		description,
		categories,
		implementationParameters,
		returns,
		raises…						| 6>;
methodImplementations ::= <categories, implementation…|0..∞>;
// Methods may include a list of categories and implementations.

restrictionParameter ::= <type, description…|1..2>;
restrictionParameters ::= <restricitonParameter…|0..∞>
semanticRestriction ::=
	<
		name,
		description,
		restrictionParameters…
		|
		3
	>;

	
// Notes to self.......
@method
@category
@see
@param
@returns
@raises
@author

@forbids   // grammatical
@restricts // semantic
@type
@supertype
@field

{@link}
{@code asdf}
