/*
 * Patricia Trie.avail
 * Copyright © 1993-2013, Mark van Gulik and Todd L Smith.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of the copyright holder nor the names of the contributors
 *   may be used to endorse or promote products derived from this software
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

System Module
   "MyModule"
Versions
   "Current Version", "Supported Previous Version"
Extends
   "PublicA" ("2.0", "1.0") = ("Message1", "Message2"),
   "PublicB" ("3.0"),
   "PublicC" = ("Message3", "Message4"),
   "PublicD"
Uses
   "PrivateE" ("5.0", "4.0") = ("Message5", "Message6"),
   "PrivateF" ("6.0"),
   "PrivateG" = ("Message7", "Message8"),
   "PrivateH"
   "Core" =
	(
		"_+_" → "_+_(Core)",
		"_-_" → "_-_(Core)",
		"_×_" → "_×_(Core)",
		"_÷_" → "_÷_(Core)",
		"_^_" → "_^_(Core)"
        )
Names
   "do something with_",
   "do something else with_"
Body


"terminus" is a new field atom;
"next nodes" is a new field atom;

/**
 * An abstract class that defines a basic trie.
 * 
 * @type "trie"
 * @supertype {@type "object" object}
 * @category "Trie"
 * @field "terminus" "boolean"
 *	Indicates if at the end of a branch {@link "www.google.com" "random link"}
 * word.
 * @author "Richard Arriaga"
 */
Class "trie" extends object
	with mutable field
		terminus : boolean;

/**
 * An abstract class that defines a basic trie.
 * 
 * @type "trie"
 * @supertype {@type "object" object}
 * @category "Trie"
 * @field "next nodes" "↑{character→trie|}"
 *	the nodes that follow in the trie
 * @author "Richard Arriaga"
 */
Public class "patricia trie" extends trie
	with mutable field
		referable next nodes : {character→trie|};

/**
 * Indicates if it is at the end of a branch
 *
 * @method "_is at terminus"
 * @categories "Trie"
 * @param "tree" "trie" 
 *      a trie
 * @returns "boolean"
 *      true if at end of branch
 * @author "Richard Arriaga"
 */
Public method "_is at terminus" is
[
	tree : patricia trie
 |
 	tree's terminus
]:boolean;
