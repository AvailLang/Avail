/**
 * 2-test parser.avail
 * Copyright (c) 2010, Mark van Gulik.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of the copyright holder nor the names of the contributors
 *   may be used to endorse or promote products derived from this software
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

Module "2-test parser"
Extends
Uses "2-main"
Names
Body


/* A parsing performance test for Avail. */
z ::= [
	a1 ::= 1 + 2 - 3 / 4 - 5 ^ 4 - -  3 ^ 2 * 1;
/*	a2 ::= 1 + 2 - 3 / 4 - 5 ^ 4 - -  3 ^ 2 * 1;
	a3 ::= 1 + 2 - 3 / 4 - 5 ^ 4 - -  3 ^ 2 * 1;
	a4 ::= 1 + 2 - 3 / 4 - 5 ^ 4 - -  3 ^ 2 * 1;
	a5 ::= 1 + 2 - 3 / 4 - 5 ^ 4 - -  3 ^ 2 * 1;
	a6 ::= 1 + 2 - 3 / 4 - 5 ^ 4 - -  3 ^ 2 * 1;
	a7 ::= 1 + 2 - 3 / 4 - 5 ^ 4 - -  3 ^ 2 * 1;
	a8 ::= 1 + 2 - 3 / 4 - 5 ^ 4 - -  3 ^ 2 * 1;
	a9 ::= 1 + 2 - 3 / 4 - 5 ^ 4 - -  3 ^ 2 * 1;
	a10 ::= 1 + 2 - 3 / 4 - 5 ^ 4 - -  3 ^ 2 * 1;
	a11 ::= 1 + 2 - 3 / 4 - 5 ^ 4 - -  3 ^ 2 * 1;
	a12 ::= 1 + 2 - 3 / 4 - 5 ^ 4 - -  3 ^ 2 * 1;
	a13 ::= 1 + 2 - 3 / 4 - 5 ^ 4 - -  3 ^ 2 * 1;
	a14 ::= 1 + 2 - 3 / 4 - 5 ^ 4 - -  3 ^ 2 * 1;
	a15 ::= 1 + 2 - 3 / 4 - 5 ^ 4 - -  3 ^ 2 * 1;
	a16 ::= 1 + 2 - 3 / 4 - 5 ^ 4 - -  3 ^ 2 * 1;
	a17 ::= 1 + 2 - 3 / 4 - 5 ^ 4 - -  3 ^ 2 * 1;
	a18 ::= 1 + 2 - 3 / 4 - 5 ^ 4 - -  3 ^ 2 * 1;
	a19 ::= 1 + 2 - 3 / 4 - 5 ^ 4 - -  3 ^ 2 * 1;
	a20 ::= 1 + 2 - 3 / 4 - 5 ^ 4 - -  3 ^ 2 * 1;
*/
];

z();
