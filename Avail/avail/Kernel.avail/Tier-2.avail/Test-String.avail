/**
 * .../Tier-2/Test-String.avail
 * Copyright (c) 2011, Mark van Gulik.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of the copyright holder nor the names of the contributors
 *   may be used to endorse or promote products derived from this software
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

System Module "Test-String"
Extends
Uses
	"Tier-1",
	"Continuation",
	"Tuple"
Names
Body


Method "_check_" is [str : string, ints : tuple of integer |
	Assert ||str|| = ||ints||;
	From 1 to ||str|| do [i : natural number |
		Assert code point of str[i] = ints[i];
	];
];


"a" check <97>;
"ab" check <97, 98>;
"\n" check <10>;
"a\n" check <97, 10>;
"\r" check <13>;
"\r\n" check <13, 10>;
"\t" check <9>;
"\(61)" check <97>;

Assert "c\(61)t" = "cat";
Assert "\(63,61)t" = "cat";
Assert "\(63)at" = "cat";
Assert "\(63)\(61)\(74)" = "cat";
Assert "\(63)a\(74)" = "cat";

"\(F,EE,DDD,CCCC,BBBBB,10AAAA)" check
	<16r"F", 16r"EE", 16r"DDD", 16r"CCCC", 16r"BBBBB", 16r"10AAAA">;
"\(0,00,000,0000,00000,000000)" check <0, 0, 0, 0, 0, 0>;
"\(10FFFF,FFFF,EEE,DD,C)" check <16r"10FFFF", 16r"FFFF", 16r"EEE", 16r"DD", 16r"C">;
"\"" check <34>;
"\\" check <92>;
"\"a" check <34, 97>;
"\\a" check <92, 97>;
"\\\t" check <92, 9>;
"\t \r\n" check <9, 32, 13, 10>;

/* Check that characters beyond the Basic Multilingual Page work. */
"ùÑû" check <16r"1D11E">;

Method "ùÑû" is ["hello";];
Assert ùÑû = "hello"; 