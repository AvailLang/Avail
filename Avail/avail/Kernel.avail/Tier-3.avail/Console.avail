/**
 * .../Tier-3/Console.avail
 * Copyright (c) 2011, Mark van Gulik.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of the copyright holder nor the names of the contributors
 *   may be used to endorse or promote products derived from this software
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

System Module "Console"
Extends
Uses
	"Tier-2",
	"Number",
	"Control-Structure",
	"Enum"
Names
	"a string",
	"input character from console",
	"get user input",
	"Ask for_with the question,_"
Body

Method "a string" is [string;];

Method "input character from console" is
[
	Primitive 254 (failureCode : natural number);
	Crash "read from console failed";
] : character;


Method "get user input" is [
 
 	stream : string := "";
 	charInput : character;
 	
 	Loop 
 	[
 		charInput := input character from console;

 		if charInput not = $"\n" then [ stream := stream then <charInput>;];
 	] until
 	[
 		charInput = $"\n";
 	];
 	
 	stream;
 ]:string;

/** A function that queries a user for an input of a specific type.
 *  Currently the function can handle integers, floats, strings and defaults
 *  to a string.  Syntax to obtain:
 *		1) integer - integer or an integer
 *			ex: Ask for an integer with the question "give me integer:";
 *		2) float - float or a float
 *			ex: Ask for an integer with the question "give me float:";
 *		3) string - string or a string
 *			ex: Ask for a string with the question "give me string:"; 
 */
Method "Ask for_with the question,_" is
[
	inputType : type,
	question : string
|
	Print question;
	
	stream : string := get user input;
	
	Switch inputType
		case string do
		[
			stream;
		]:
		case integer do
		[
			
			convert stream to integer;
		]:
		case float do
		[
			convert stream to float;
		]:
		default
		[
			stream;
		];
]:any;

Restriction "Ask for_with the question,_" is
[
	inputTypeType : any type type,
	questionType : string type
|
	inputTypeType instance;
];