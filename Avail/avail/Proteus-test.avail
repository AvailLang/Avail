/**
 * Proteus-test.avail
 * Copyright (c) 2010, Mark van Gulik.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this *   list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of the copyright holder nor the names of the contributors
 *   may be used to endorse or promote products derived from this software
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

Module "Proteus-test"
Extends
Uses
	"Kernel",
	"Proteus-Entity",
	"Proteus-Modifier",
	"Proteus-Score",
	"Proteus-Character"
Names
Body

/* Exercise the Proteus objects somewhat. */
privateMass ::= lookup "mass";
privateEndurance ::= lookup "endurance";
privateResilience ::= lookup "resilience";
privateStrength ::= lookup "strength";
privateStamina ::= lookup "stamina";
privateSpeed ::= lookup "speed";
privateStability ::= lookup "stability";
privateFortitude ::= lookup "fortitude";
privateName ::= lookup "characterName";

fred ::= Character new with <
	<privateName, "Fred">,
	<privateMass, 200>,
	<privateEndurance, 10>,
	<privateResilience, 0>,
	<privateStrength, 150>,
	<privateStamina, 21>,
	<privateSpeed, 3>,
	<privateStability, 11>,
	<privateFortitude, 42>>;

Assert fred name = "Fred";
fredMass := fred mass;
newMass := fredMass with natural rank of 210;
Assert natural rank of newMass = 210;
Assert natural rank of fred mass = 200;  /* Ensure original is unchanged */

newerMass := fredMass with natural rank increased by 50;
Assert natural rank of newerMass = 250;

Assert damage sustained upon fred mass = 0;
