<?xml version="1.0" encoding="UTF-8"?>
<!--
build.xml
Copyright Â© 1993-2014, The Avail Foundation, LLC.
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this
  list of conditions and the following disclaimer.

* Redistributions in binary form must reproduce the above copyright notice,
  this list of conditions and the following disclaimer in the documentation
  and/or other materials provided with the distribution.

* Neither the name of the copyright holder nor the names of the contributors
  may be used to endorse or promote products derived from this software
  without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.
-->
<project name="Avail" default="avail-dev">
	<property name="path.avail" value="${basedir}" />
	<property name="path.avail.src" value="${path.avail}/src"/>
	<property name="path.avail.bin" value="${path.avail}/bin"/>
	<property name="path.avail.resources" value="${path.avail}/resources"/>
	<property name="path.avail.jar" value="${path.avail}/distro/lib"/>
	<property
		name="path.interpreter"
		value="${path.avail.bin}/com/avail/interpreter"/>
	<property
		name = "primitive.package"
		value="com.avail.interpreter.primitive"/>

	<!--
		Produce a file containing the build time that can be included as a
		resource.
	-->
	<target
			name="generate-build-time"
			description="Generate a resource that contains the build time.">
		<property
			name="path.build.time"
			value="${path.avail.resources}/build-time.txt"/>
		<tstamp>
			<format property="build.time" pattern="yyyyMMdd.HHmmss.SSS"/>
		</tstamp>
		<echo file="${path.build.time}" append="no" message="${build.time}"/>
	</target>

	<!--
		Produce a file containing the complete list of primitives. This is
		needed for locating the primitives within a JAR.
	-->
	<target
			name="generate-primitives-list"
			description="Generate a resource that lists the primitive classes.">
		<property
			name="path.primitives"
			value="${path.interpreter}/primitive"/>
		<property
			name="path.primitives-list"
			value="${path.interpreter}/All_Primitives.txt"/>
		<fileset
				id="primitives"
				dir="${path.primitives}"
				includes="P_*.class"
				excludes="*$*.class">
		</fileset>
		<pathconvert
			property="one-primitive-per-line"
			refid="primitives"
			pathsep="${line.separator}">
		</pathconvert>
		<echo
			file="${path.primitives-list}"
			append="no"
			message="${one-primitive-per-line}"/>
		<!--
			Remove the absolute path to the "bin" directory, replacing the
			remaining path separators with dots.
		-->
		<replaceregexp file="${path.primitives-list}"
			match=".*[\\/]([^\\/]+)\.class"
			replace="${primitive.package}.\1"
			byline="true"/>
	</target>

	<!--
		Produce any automatically generated resources that are needed to use one
		of the ultimate build products.
	-->
	<target
		name="initialize"
		depends="generate-build-time, generate-primitives-list"
		description="Initialize the build."/>

	<!--
		Build the Avail sources.
	-->
	<target
			name="build-sources"
			depends="initialize"
			description="Build the Avail sources.">
		<javac
				srcdir="${path.avail.src}"
				destdir="${path.avail.bin}"
				source="1.7"
				target="1.7"
				encoding="UTF-8"
				includeantruntime="true"
				includejavaruntime="true"
				debug="true"
				optimize="true"
				deprecation="true">
			<compilerarg compiler="javac1.7"/>
		</javac>
	</target>
	
	<!--
		Build the Avail virtual machine.
	-->
	<property name="jar.avail" value="Avail.jar"/>
	<property
		name="path.jar.avail"
		value="${path.avail.jar}/${jar.avail}"/>
	<target
			name="avail-vm"
			depends="build-sources"
			description="Build the Avail virtual machine as a library.">
		<jar jarfile="${path.jar.avail}">
			<manifest>
				<attribute name="Build-Version" value="${build.time}"/>
				<attribute name="Built-By" value="${user.name}"/>
				<attribute name="Sealed" value="true"/>
			</manifest>
			<fileset
				dir="${path.avail.bin}"
				excludes="
					**/tests/**,
					com/avail/environment/**,
					com/avail/tools/**"/>
			<fileset
				dir="${path.avail}"
				includes="resources/**"/>
		</jar>
	</target>

	<!--
		Build the Avail development environment.
	-->
	<property
		name="jar.dev"
		value="AvailDev.jar"/>
	<property
		name="path.jar.dev"
		value="${path.avail.jar}/${jar.dev}"/>
	<target
			name="avail-dev"
			depends="avail-vm">
		<jar jarfile="${path.jar.dev}">
			<manifest>
				<attribute name="Build-Version" value="${build.time}"/>
				<attribute name="Built-By" value="${user.name}"/>
				<attribute name="Class-Path" value="${jar.avail}"/>
				<attribute
					name="Main-Class"
					value="com.avail.environment.AvailBuilderFrame"/>
				<attribute name="Sealed" value="true"/>
			</manifest>
			<fileset
				dir="${path.avail.bin}"
				includes="com/avail/environment/**"/>
			<fileset
				dir="${path.avail}"
				includes="resources/**"/>
		</jar>
	</target>
</project>
