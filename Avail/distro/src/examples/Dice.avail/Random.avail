/*
 * Random.avail
 * Copyright © 1993-2014, The Avail Foundation, LLC.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of the copyright holder nor the names of the contributors
 *   may be used to endorse or promote products derived from this software
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

Module "Random"
Versions
	"1.0.0 DEV 2014-04-28"
Uses
	"Avail"
Names
	/* The default pRNG. */
	"default pRNG",

	/* Transactional pRNG usage. */
	"Using|using_,do_"
Body

/**
 * The default {@type "pRNG"} used to resolve dice expressions when no specific
 * pRNG is implied.
 *
 * @global "rng" "pRNG"
 */
rng : pRNG := a Mersenne Twister;

"transactional pRNG" is a heritable fiber-local atom;

/**
 * Answer the default {@type "pRNG"}. This will be a {@global "rng" global
 * pseudorandom number generator} unless transactional boundaries have been
 * established.
 *
 * @category "Dice" "Pseudorandom Number Generation"
 * @method "default pRNG"
 * @returns "pRNG"
 *          The transactional {@type "pRNG"}, if established, or a {@global
 *          "rng" global pseudorandom number generator}.
 * @see "using_,do_"
 */
Public method "default pRNG" is
[
	default ::= current fiber[transactional pRNG] else [rng];
	cast default into [t : pRNG | t]
] : pRNG;

/**
 * Use {@param "scopedRNG"} as the {@method "default pRNG"} for the purpose of
 * resolving dice expressions within {@param "action"}.
 *
 * @category "Dice" "Pseudorandom Number Generation" "Control Structures"
 * @method "Using|using_,do_"
 * @param "scopedRNG" "pRNG"
 *        A {@type "pRNG"}.
 * @param "action" "[]→⊤"
 *        The function to which the specified {@type "pRNG"} should be scoped.
 * @returns "⊤"
 */
Public method "Using|using_,do_" is
[
	scopedRNG : pRNG,
	action : []→⊤
|
	current fiber[transactional pRNG] := scopedRNG;
	Guard action
	ensure [Remove current fiber[transactional pRNG];];
] : ⊤;

Semantic restriction "Using|using_,do_" is
[
	scopedRNG : pRNG's type,
	action : []→⊤'s type
|
	action's return type
];
