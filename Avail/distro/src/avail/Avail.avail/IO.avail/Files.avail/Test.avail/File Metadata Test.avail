/*
 * File Metadata Test.avail
 * Copyright © 1993-2014, The Avail Foundation, LLC.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of the copyright holder nor the names of the contributors
 *   may be used to endorse or promote products derived from this software
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

Module "File Metadata Test"
Versions
	"1.0.0 DEV 2014-04-28"
Uses
	"Common" =
	(
		"I/O test suite",
		"test directory"
	),
	"File Access Rights",
	"File Metadata",
	"File Names",
	"File Principals",
	"File Test Utilities",
	"Foundation",
	"Unit Testing"
Names
	"file metadata test suite"
Body

"file metadata test suite" is a new atom;
New test suite file metadata test suite extends I/O test suite;

Before running file metadata test suite, do
[
	/* TODO: [TLS] Make sure that abracadabra.txt contains the eponymous
	 * text.
	 */
	/* TODO: [TLS] Create a symbolic link for file type testing. */
];

After running file metadata test suite, do
[
	Set standard file access rights;
	/* TODO: [TLS] Remove the symbolic link for file type testing. */
];

Test "file ID" in file metadata test suite is
[
	fn1 ::= abracadabra.txt;
	Require: fn1's file ID = fn1's file ID;
	m1 ::= fn1's metadata;
	Require: m1's file ID = m1's file ID;
	Require: m1's file ID = fn1's file ID;
	fn2 ::= scratch.txt;
	Require: fn2's file ID = fn2's file ID;
	Require: fn1's file ID ≠ fn2's file ID;
	m2 ::= fn2's metadata;
	Require: m2's file ID = m2's file ID;
	Require: m2's file ID = fn2's file ID;
	Require: m1's file ID ≠ m2's file ID;
];

Test "file types" in file metadata test suite is
[
	fn1 ::= abracadabra.txt;
	Require: fn1's file type = regular file;
	Require: fn1 is regular file;
	Require: fn1's metadata is regular file;
	fn2 ::= ./test directory;
	Require: fn2's file type = directory;
	Require: fn2 is directory;
	Require: fn2's metadata is directory;
	fn4 ::= a file named "/dev/null";
	If fn4 exists then
	[
		Require: special file = fn4's file type;
		Require: fn4 is special file;
		Require: fn4's metadata is special file;
	];
];

Test "file times" in file metadata test suite is
[
	fn ::= abracadabra.txt;
	Require:
		fn's creation time
		≤ fn's last modification time
		≤ fn's last access time
		≤ milliseconds since the Epoch;
	m ::= fn's metadata;
	Require:
		m's creation time
		≤ m's last modification time
		≤ m's last access time
		≤ milliseconds since the Epoch;
	Require: m's creation time = fn's creation time;
	Require: m's last modification time = fn's last modification time;
	Require: m's last access time = fn's last access time;
];

Test "file size" in file metadata test suite is
[
	fn ::= abracadabra.txt;
	Require: fn's size = 11;
	m ::= fn's metadata;
	Require: m's size = 11;
];

Test "file access rights" in file metadata test suite, if supported, is
[
	fn ::= abracadabra.txt;
	m ::= fn's metadata;
	Randomly permute file access rights for
	[
		rights : {file access right|0..9}
	|
		m's access rights := rights;
		Require: m's access rights = rights;
	] 10 times;
];

Test "file principals" in file metadata test suite, if supported, is
[
	fn ::= abracadabra.txt;
	m ::= fn's metadata;
	Require: m's owner = fn's owner;
	Require: m's group = fn's group;
];
