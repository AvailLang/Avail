/*
 * Streams.avail
 * Copyright © 1993-2014, The Avail Foundation, LLC.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of the copyright holder nor the names of the contributors
 *   may be used to endorse or promote products derived from this software
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

Module "Streams"
Versions
	"dev"
Extends
	"Abstract Streams" =
	(
		"For each of⁇_do_",
		"an empty stream",
		"concatenate_",
		"drop from_until_",
		"drop from_while_",
		"drop«at most»?_from_",
		"element type",
		"empty stream",
		"empty-stream exception",
		"filter_by_",
		"map_through_",
		"stream",
		"stream of_",
		"take from_until_",
		"take from_while_",
		"take«at most»?_from_",
		"zip_",
		"_is empty",
		"_starts with_",
		"_'s⁇element type",
		"_'s⁇head",
		"_'s⁇tail",
		"«_‡zip»",
		"«_‡++»",
		"_'s⁇head method is_",
		"_'s⁇tail method is_"
	),
	"Bounded Streams" =
	(
		"_limited to_elements"
	),
	"Collection Streams" =
	(
		"a stream over_"
	),
	"Counting Streams" =
	(
		"a counting stream from_to_",
		"a counting stream from_to_by_"
	),
	"Delimited Streams" =
	(
		"_delimited by_",
		"_delimited by any of_"
	)
Body
