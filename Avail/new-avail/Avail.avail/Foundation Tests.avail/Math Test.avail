/*
 * Math Test.avail
 * Copyright © 1993-2012, Mark van Gulik and Todd L Smith.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of the copyright holder nor the names of the contributors
 *   may be used to endorse or promote products derived from this software
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

System Module "Math Test"
Versions
	"dev"
Uses
	"Foundation",
	"Unit Testing"
Body

Test "addition" is
[
	Require: 1 + 1 = 2;
	Require: 1 + -1 = 0;
	Require: 2147483647 + 1 = 2147483648;
	Require: 9223372036854775807 + 1 = 9223372036854775808;
	Require: 1111111111111111111111111 + 1111111111111111111111111
		= 2222222222222222222222222;
	Require: ∞ + 1 = ∞;
	Require: ∞ + ∞ = ∞;
	Require: -∞ + 1 = -∞;
	Require: -∞ + -∞ = -∞;
];

Test "cannot add unlike infinities" is
[
	/* Hide ∞ from the compiler. */
	v : extended integer := ∞;
	Ignore: v + -v;
]
must raise cannot-add-unlike-infinities exception;

Test "subtraction" is
[
	Require: 2 - 1 = 1;
	Require: 1 - 1 = 0;
	Require: 1 - -1 = 2;
	Require: -2147483648 - 1 = -2147483649;
	Require: -9223372036854775808 - 1 = -9223372036854775809;
	Require: 2222222222222222222222222 - 1111111111111111111111111
		= 1111111111111111111111111;
	Require: ∞ - 1 = ∞;
	Require: ∞ - -∞ = ∞;
	Require: -∞ - 1 = -∞;
	Require: -∞ - ∞ = -∞;
];

Test "cannot subtract like infinities" is
[
	/* Hide ∞ from the compiler. */
	v : extended integer := ∞;
	Require: [v - v] raises cannot-subtract-like-infinities exception;
	Require: [-v - -v] raises cannot-subtract-like-infinities exception;
];

Test "minimum function" is
[
	Require: min <1, 2, 3, 4, 5> = 1;
	Require: 1 min 2 min 3 min 4 min 5 = 1;
	Require: min <-1, -2, -3, -4, -5> = -5;
	Require: -1 min -2 min -3 min -4 min -5 = -5;
	Require: min <-∞, ∞> = -∞;
	Require: -∞ min ∞ = -∞;
	Require: min <-5, -7, 10, 31, -6> = -7;
	Require: -5 min -7 min 10 min 31 min -6 = -7;
];

Test "maximum function" is
[
	Require: max <1, 2, 3, 4, 5> = 5;
	Require: 1 max 2 max 3 max 4 max 5 = 5;
	Require: max <-1, -2, -3, -4, -5> = -1;
	Require: -1 max -2 max -3 max -4 max -5 = -1;
	Require: max <-∞, ∞> = ∞;
	Require: -∞ max ∞ = ∞;
	Require: max <-5, -7, 10, 31, -6> = 31;
	Require: -5 max -7 max 10 max 31 max -6 = 31;
];
