/*
 * Early Literals.avail
 * Copyright © 1993-2012, Mark van Gulik and Todd L Smith.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of the copyright holder nor the names of the contributors
 *   may be used to endorse or promote products derived from this software
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

System Module "Early Literals"
Versions
	"dev"
Uses
	"Bootstrap"
Names
	"<«_‡,»>",
	"{«_‡,»}"
Body

/**
 * Construct and answer a tuple from the lexically specified expressions. The
 * hard work here is done automatically by the Avail compiler.
 *
 * Parameters:
 *    elements - The desired tuple, lexically constructed by the compiler.
 * Returns:
 *    The argument.
 */
Method "<«_‡,»>" is
[
	elements : tuple
|
	elements
] : tuple;

/**
 * Strengthen the type of `<«_‡,»>` to the most exact possible. The hard work
 * here is done automatically by the Avail compiler, which examines the lexical
 * arguments and produces instance types for literals and applies semantic
 * restrictions to any method sends.
 */
Semantic restriction "<«_‡,»>" is
[
	elements : tuple meta
|
	elements
];

/**
 * Construct and answer a set from the lexically specified expressions.
 *
 * Parameters:
 *    elements - A tuple, lexically constructed by the compiler, whose elements
 *       should be unique members of the answer.
 * Returns:
 *    The requested set.
 */
Method "{«_‡,»}" is
[
	elements : <<>, any…|natural number>
|
	elements→set
] : set;
