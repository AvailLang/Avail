/*
 * Atoms.avail
 * Copyright © 1993-2012, Mark van Gulik and Todd L Smith.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of the copyright holder nor the names of the contributors
 *   may be used to endorse or promote products derived from this software
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

System Module "Atoms"
Versions
	"dev"
Uses
	"Bootstrap",
	"Early Control Structures",
	"Early Definers",
	"Early Literals"
Names
	"_[_]else_"
Body

/**
 * Answer the value associated with the property {@param "key"} of {@param
 * "anAtom"}. If no such property exists, then answer the result of applying
 * {@param "else"}.
 *
 * @method "_[_]else_"
 * @param "anAtom" "atom"
 *        An atom.
 * @param "key" "atom"
 *        The property key.
 * @param "else" "[]→any"
 *        The function to apply if {@param "key"} is not a property of {@param
 *        "anAtom"}.
 * @returns Either the requested property value or the result of applying
 *          {@param "else"}.
 */
Method "_[_]else_" is
[
	anAtom : atom,
	key : atom,
	else : function accepting <> and returning any
|
	if key ∈ anAtom
	then [anAtom[key]]
	else else
] : any;

/**
 * Answer the value associated with the property {@param "key"} of {@param
 * "aFiber"}. If no such property exists, then answer the result of applying
 * {@param "else"}.
 *
 * @method "_[_]else_"
 * @param "aFiber" "fiber"
 *        A fiber.
 * @param "key" "atom"
 *        The property key.
 * @param "else" "[]→any"
 *        The function to apply if {@param "key"} is not a property of {@param
 *        "aFiber"}.
 * @returns Either the requested property value or the result of applying
 *          {@param "else"}.
 */
Method "_[_]else_" is
[
	aFiber : fiber,
	key : atom,
	else : function accepting <> and returning any
|
	if key ∈ aFiber
	then [aFiber[key]]
	else else
] : any;
