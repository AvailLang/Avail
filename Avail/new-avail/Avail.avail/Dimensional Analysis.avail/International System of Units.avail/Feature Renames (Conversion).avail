/*
 * Feature Renames (Conversion).avail
 * Copyright © 1993-2012, Mark van Gulik and Todd L Smith.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of the copyright holder nor the names of the contributors
 *   may be used to endorse or promote products derived from this software
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

System Module "Feature Renames (Conversion)"
Versions
	"dev"
Uses
	"Core" =
	(
		"dimensioned quantity",
		"metric",
		"unit"
	),
	"Foundation" =
	(
		"Method_is_",
		"Semantic restriction_is_",
		"extend_with«_:_‡,»",
		"$…",
		"_'s⁇type",
		"_-_",
		"_^_",
		"_×_"
	)
Names
	"exponentiation atom",
	"multiplication atom",
	"subtraction atom",
	"conversion atom",
	"_converted to_"
Body

_subtract ::= $"_-_";
Method "subtraction atom" is [_subtract];

_times ::= $"_×_";
Method "multiplication atom" is [_times];

_power ::= $"_^_";
Method "exponentiation atom" is [_power];

_converter ::= $"_converted to_";
Method "conversion atom" is [_converter];

Semantic restriction "_converted to_" is
[
	quantityType : dimensioned quantity's type,
	unitType : unit's type
|
	extend dimensioned quantity with metric : unitType
];
