/*
 * Test.avail
 * Copyright © 1993-2012, Mark van Gulik and Todd L Smith.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of the copyright holder nor the names of the contributors
 *   may be used to endorse or promote products derived from this software
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

System Module "Test"
Versions
	"dev"
Uses
	"Avail",
	"Core",
	"International System of Units"
Body

/* Disable some annoying exceptions that happen during execution of semantic
 * restrictions.
 */
unhandledExceptionHandler ::= current fiber's unhandled exception handler;
current fiber's unhandled exception handler is
[
	e : exception
|
	/* These are the expected exceptions. */
	if e ∈ cannot-add-unlike-infinities exception
		∨ [e ∈ cannot-subtract-like-infinities exception]
	then
	[
		/* Silently terminate. */
		Terminate current fiber
	]
	else
	[
		unhandledExceptionHandler(e)
	]
];

Test "comparison" in dimensional analysis test suite is
[
	For each map 1 to 10 through [i : [1..10] | i m] do
	[
		q : [1..10] m
	|
		Require: q = q;
		Require: q ≤ q;
		Require: q ≥ q;
		Require: q ≤ q + 1 m;
		Require: q < q + 1 m;
		Require: q ≥ q - 1 m;
		Require: q > q - 1 m;
		Require: q ≤ ∞ m;
		Require: q < ∞ m;
		Require: q ≥ -∞ m;
		Require: q > -∞ m;
		Require: q = q = q;
		Require: q - 1 m ≤ q - 1 m < q = q < q + 1 m ≤ q + 1 m;
		Require: q + 1 m ≥ q + 1 m > q = q > q - 1 m ≥ q - 1 m;
	];
];

Test "negation" in dimensional analysis test suite is
[
	For each map 1 to 10 through [i : [1..10] | i s] do
	[
		q : [1..∞] s
	|
		Require: -q ≠ q;
		Require: |-q| = q;
		Require: -(-q) = q;
	];
	Require: -0 mol = 0 mol;
];

Test "addition" in dimensional analysis test suite is
[
	For each map 1 to 10 through [i : [1..10] | i K] do
	[
		q : [1..10] K
	|
		Require: q + 0 K = q;
		Require: q + -q = 0 K;
		Require: q + 1 K > q;
		Require: q + q = q × 2;
		From 1 to 10 do [i : [1..10] | Require: q + i K = i K + q; ];
	];
	Require: 2147483647 m + 1 m = 2147483648 m;
	Require: 9223372036854775807 s + 1 s = 9223372036854775808 s;
	Require: 1111111111111111111111111 A + 1111111111111111111111111 A
		= 2222222222222222222222222 A;
	Require: ∞ m + 1 m = ∞ m;
	Require: ∞ m + ∞ m = ∞ m;
	Require: -∞ m + 1 m = -∞ m;
	Require: -∞ m + -∞ m = -∞ m;
	Require: (1.0→float) s + (1.0→float) s = (2.0→float) s;
	Require: 1.0 s + 1.0 s = 2.0 s;
	Require: 1 s + (1.0→float) s = (2.0→float) s;
	Require: 1 s + 1.0 s = 2.0 s;
	Require: (1.0→float) s + 1.0 s = 2.0 s;
];

Test "cannot add unlike infinities" in dimensional analysis test suite is
[
	/* Hide ∞ from the compiler. */
	v : dimensioned extended integer := ∞ m;
	Require: [v + -v] raises cannot-add-unlike-infinities exception;
	Require: [-v + v] raises cannot-add-unlike-infinities exception;
];

Test "cannot add unlike units" in dimensional analysis test suite is
[
	u : dimensioned integer := 1 m;
	v : dimensioned integer := 1 cd;
	Ignore: u + v;
]
must raise incompatible-quantities exception;

Test "subtraction" in dimensional analysis test suite is
[
	For each map 1 to 10 through [i : [1..10] | i cd] do
	[
		q : [1..10] cd
	|
		Require: q - 0 cd = q;
		Require: q - q = 0 cd;
		Require: q - -q = q + q;
		For each 1 to 10 do [i : [1..10] | Require: q - i cd = -(i cd - q); ];
	];
	Require: -2147483648 m - 1 m = -2147483649 m;
	Require: -9223372036854775808 s - 1 s = -9223372036854775809 s;
	Require: 2222222222222222222222222 A - 1111111111111111111111111 A
		= 1111111111111111111111111 A;
	Require: ∞ m - 1 m = ∞ m;
	Require: ∞ m - -∞ m = ∞ m;
	Require: -∞ m - 1 m = -∞ m;
	Require: -∞ m - ∞ m = -∞ m;
	Require: (2.0→float) m - (1.0→float) m = (1.0→float) m;
	Require: 2.0 m - 1.0 m = 1.0 m;
	Require: 2 m - (1.0→float) m = (1.0→float) m;
	Require: 2 m - 1.0 m = 1.0 m;
	Require: (2.0→float) m - 1.0 m = 1.0 m;
];

Test "cannot subtract like infinities" in dimensional analysis test suite is
[
	/* Hide ∞ from the compiler. */
	v : dimensioned extended integer := ∞ mol;
	Require: [v - v] raises cannot-subtract-like-infinities exception;
	Require: [-v - -v] raises cannot-subtract-like-infinities exception;
];

Test "cannot subtract unlike units" in dimensional analysis test suite is
[
	u : dimensioned integer := 1 m;
	v : dimensioned integer := 1 cd;
	Ignore: u - v;
]
must raise incompatible-quantities exception;

/* Restore the original unhandled exception handler. */
current fiber's unhandled exception handler is unhandledExceptionHandler;
