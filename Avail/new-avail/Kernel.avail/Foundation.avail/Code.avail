/**
 * Kernel/Foundation/Code
 * Copyright (c) 2010, Mark van Gulik.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of the copyright holder nor the names of the contributors
 *   may be used to endorse or promote products derived from this software
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/**
 * Make available {@code closure} and its types, {@code compiled code}, {@code
 * continuation} and its type, and {@code process}.
 * 
 * @author Todd L Smith &lt;anarakul@gmail.com&gt;
 */
Module
	"Code"
Extends
Uses
	"Bootstrap",
	"Types"
Names
	"closure",
	"closure type",
	"compiled code",
	"continuation",
	"continuation type",
	"generalized closure type",
	"process"
Body

/**
 * @returns The type of a closure with unspecified arguments and covariant
 *          return type.
 */
Method "generalized closure type" is
[
	Special Object 16;
] : meta;

/**
 * @return The type of type {@code closure}.
 */
Method "closure type" is
[
	Special Object 5;
] : meta;

/**
 * @return The supertype of every specific closure type.
 */
Method "closure" is
[
	Special Object 4;
] : closure type;

/**
 * @return The type of type {@code continuation}.
 */
Method "continuation type" is
[
	Special Object 10;
] : meta;

/**
 * @return The supertype of every specific continuation. 
 */
Method "continuation" is
[
	Special Object 9;
] : continuation type;

/**
 * @return The type of compiled code.
 */
Method "compiled code" is
[
	Special Object 6;
] : primitive type;

/**
 * @return The type of a process.
 */
Method "process" is
[
	Special Object 27;
] : primitive type;