/**
 * /System/Foundation/Genesis
 * Copyright (c) 2010, Mark van Gulik.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of the copyright holder nor the names of the contributors
 *   may be used to endorse or promote products derived from this software
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/**
 * "In the beginning ..."
 *
 * This is the absolute first Avail module. It is the only module permitted to
 * explicitly bootstrap and name the defining methods. The pragma keys,
 * "bootstrapDefiningMethod" and "bootstrapSpecialObject", are magical names
 * specially known to the Avail VM.
 *
 * @author Todd L Smith &lt;anarakul@gmail.com&gt;
 * @author Leslie Schultz &lt;leslie.a.schultz@gmail.com&gt;
 */
System Module "Pragmas"
Pragma
	/**
	 * This is how the built-in types and values are made accessible to an Avail
	 * developer. The actual "special objects" will be bound to names in
	 * subsequent modules.
	 *
	 * @param specialObjectNumber
	 *        The "special object" identifier, a small integer. 1 for all, 2
	 *        for "boolean type", etc.
	 * @see com.avail.AvailRuntime#specialObjects
	 */
	"bootstrapSpecialObject = Special Object_",
	
	/**
	 * This is the primary defining method. It enables a developer to bind a
	 * module local name to a closure.
	 *
	 * @param methodName
	 *        A string, usually but not necessarily a string literal, that names
	 *        the method within the module.
	 * @param methodClosure
	 *        The closure that implements the method.
	 */
	"bootstrapDefiningMethod = Method_is_"
Extends
Uses
Names
Body

/*
 * No implementation required.
 */