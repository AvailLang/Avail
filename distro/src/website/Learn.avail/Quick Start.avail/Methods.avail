/*
 * Methods.avail
 * Copyright © 1993-2022, The Avail Foundation, LLC.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of the copyright holder nor the names of the contributors
 *   may be used to endorse or promote products derived from this software
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

Module "Methods"
Uses
	"Avail"
Names
	"compare_and_"
Body

"fruitiness" is a new field atom;

Explicit class "apple" extends object
	with field
		fruitiness : integer;

Method "an apple" is
[
	an apple with fruitiness ::= 10
];

Explicit class "orange" extends object
	with field
		fruitiness : integer;

Method "an orange" is
[
	an orange with fruitiness ::= 20
];

Method "compare_and_" is
[
	a : number,
	b : number
|
	a - b
];

Method "compare_and_" is
[
	a : apple,
	o : orange
|
	a's fruitiness - (o's fruitiness + 10)
];

Print: “compare 5 and 10” ++ "\n";
Print: “compare an apple and an orange” ++ "\n";

Class "moldy apple" extends apple
	with field
		fruitiness : nonpositive integer;

Class "succulent orange" extends orange
	with field
		fruitiness : [100..∞);

Method "a moldy apple" is
[
	a moldy apple with fruitiness ::= -500
];

Method "a succulent orange" is
[
	a succulent orange with fruitiness ::= 500
];

Method "compare_and_" is
[
	a : moldy apple,
	o : orange
|
	a's fruitiness - (o's fruitiness + 100)
];

Method "compare_and_" is
[
	a : moldy apple,
	o : succulent orange
|
	a's fruitiness - (o's fruitiness + 1000)
];

Print: “compare a moldy apple and an orange” ++ "\n";
Print: “compare a moldy apple and a succulent orange” ++ "\n";
