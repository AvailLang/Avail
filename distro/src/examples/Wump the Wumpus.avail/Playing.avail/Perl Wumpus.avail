/*
 * Perl Wumpus.avail
 * Copyright Â© 1993-2021, The Avail Foundation, LLC.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of the copyright holder nor the names of the contributors
 *   may be used to endorse or promote products derived from this software
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

Module "Perl Wumpus"
Versions
	"Avail-1.6.0"
Uses
	"Perl Lite"
Names
	"play`_wump`_the`_wumpus"
Body

sub play {
	my ($game) = @_;
	$game->be_implied_during(sub {
		welcome;
		my $just_entered = 1;
		look_around($just_entered);
		my @actors = (agent, first_swarm, second_swarm, wumpus);
		until (is_over) {take_turn($_) for @actors}
		if (agent->{is_alive}) {
			if (!wumpus->{is_alive}) {report_victory}
			else {report_cowardice}
		}
		else {report_defeat}
		goodbye
	})
}

sub play_wump_the_wumpus {
	my $game = WumpTheWumpus::new;
	$game->{reader} = WumpTheWumpus::default_reader;
	$game->{reporter} = WumpTheWumpus::default_reporter;
	play($game)
}
