/*
 * IO.avail
 * Copyright © 1993-2020, The Avail Foundation, LLC.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of the copyright holder nor the names of the contributors
 *   may be used to endorse or promote products derived from this software
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

Module "IO"
Versions
	"1.4.0"
Uses
	"Avail"
Names
	/* Basic I/O. */
	"Wump the Wumpus reporter",
	"Wump the Wumpus reporter:=_",
	"Wump the Wumpus reader",
	"Wump the Wumpus reader:=_",

	/* User interaction. */
	"Report:_",
	"next command"
Body

/**
 * The {@type "variable"} that holds the {@param "function"} used by
 * {@method "Report:_"} to report information to the player.
 *
 * @global "reporter" "[string]→⊤"
 */
_reporter : [string]→⊤ := [s : string | Print: s;];
Public variable _reporter is "Wump the Wumpus reporter";

/**
 * Report {@param "text"} to the player.
 *
 * @method "Report:_"
 * @param "text" "string"
 *        Some text.
 */
Public method "Report:_" is [text : string | _reporter(text);] : ⊤;

/**
 * The {@type "variable"} that holds the {@param "function"} used by
 * {@method "Report:_"} to read a line of text from the player.
 *
 * @global "reader" "[]→string"
 */
_reader : []→string := [next line from standard input];
Public variable _reader is "Wump the Wumpus reader";

/**
 * Read a command from the player.
 *
 * @method "next command"
 * @returns "string"
 *          The next command.
 */
Public method "next command" is [_reader()] : string;
