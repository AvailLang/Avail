/*
 * Geography.avail
 * Copyright © 1993-2018, The Avail Foundation, LLC.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of the copyright holder nor the names of the contributors
 *   may be used to endorse or promote products derived from this software
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

Module "Geography"
Versions
	"1.0.0 DEV 2014-04-28"
Uses
	"Avail",
	"Cave",
	"Context",
	"Movable Entities"
Names
	"_contains a pit",
	"_contains a super bat swarm",
	"_contains_",
	"_is in_",
	"_'s⁇adjacent rooms"
Body

/**
 * Answer the {@type "room"}s adjacent to {@param "aRoom"} in the {@type "cave"}
 * of the implied {@type "Wump the Wumpus" game}.
 *
 * @method "_'s⁇adjacent rooms"
 * @param "aRoom" "room"
 *        A {@type "room"}.
 * @returns "{room|3}"
 *          The {@type "room"}s adjacent to {@param "aRoom"}.
 */
Public method "_'s⁇adjacent rooms" is
[
	aRoom : room
|
	map each id of aRoom's adjacent room ids through
		[the cave's network of rooms[id]]
];

Semantic restriction "_'s⁇adjacent rooms" is
[
	roomType : room's type
|
	{roomType|3}
];

/**
 * Is {@param "entity"} in {@param "aRoom"}?
 *
 * @method "_is in_"
 * @param "entity" "movable entity"
 *        A {@type "movable entity"}.
 * @param "aRoom" "room"
 *        A {@type "room"}.
 * @returns "boolean"
 *          {@method "true"} if {@param "aRoom"} contains {@param "entity"},
 *          {@method "false"} otherwise.
 */
Public method "_is in_" is
[
	entity : movable entity,
	aRoom : room
|
	entity's location = aRoom
] : boolean;

/**
 * Does {@param "aRoom"} contain the {@type "movable entity" entity}?
 *
 * @method "_contains_"
 * @param "aRoom" "room"
 *        A {@type "room"}.
 * @param "entity" "movable entity"
 *        A {@type "movable entity"}.
 * @returns "boolean"
 *          {@method "true"} if {@param "aRoom"} contains {@param "entity"},
 *          {@method "false"} otherwise.
 */
Public method "_contains_" is
[
	aRoom : room,
	entity : movable entity
|
	entity's location = aRoom
] : boolean;

/**
 * Does {@param "aRoom"} contain a pit?
 *
 * @method "_contains a pit"
 * @param "aRoom" "room"
 *        A {@type "room"}.
 * @returns "boolean"
 *          {@method "true"} if {@param "aRoom"} is a {@type "pit room"},
 *          {@method "false"} otherwise.
 */
Public method "_contains a pit" is
[
	aRoom : room
|
	aRoom ∈ pit room
] : boolean;

/**
 * Does {@param "aRoom"} contain a {@type "super bat swarm"}?
 *
 * @method "_contains a super bat swarm"
 * @param "aRoom" "↑room"
 *        A {@type "room"}.
 * @returns "boolean"
 *          {@method "true"} if {@param "aRoom"} contains a
 *          {@type "super bat swarm"}, {@method "false"} otherwise.
 */
Public method "_contains a super bat swarm" is
[
	aRoom : room
|
	aRoom ∈ {the first swarm's location, the second swarm's location}
] : boolean;

/* Make sure that "_contains a super bat swarm" takes priority over "_contains_"
 * with an object constructor in the second position.
 */
Grammatical restriction "_contains_" is
	<∅, {"a|an_", "a|an_«with«_«:»?:=_‡,»»"}>;
