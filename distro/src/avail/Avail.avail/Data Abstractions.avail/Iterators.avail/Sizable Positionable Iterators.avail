/*
 * Sizable Positionable Iterators.avail
 * Copyright © 1993-2022, The Avail Foundation, LLC.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of the copyright holder nor the names of the contributors
 *   may be used to endorse or promote products derived from this software
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

Module "Sizable Positionable Iterators"
Versions
	"Avail-1.6.0"
Uses
	"Foundation"
Extends
	"Positionable Iterators",
	"Sizable Iterators"
Names
	"`|_'s⁇remaining elements`|"
Body

/* Give "sizable_" higher precedence than "_positioned by_†". The operations are
 * commutative, so we could have broken the ambiguity either way.
 */
Grammatical restriction "sizable_" is <{"_positioned by_†"}>;

/**
 * Compute and answer the number of elements remaining in the specified
 * {@type "sizable iterator" sizable} {@type "positionable iterator"}. This
 * includes the current element.
 *
 * @method "`|_'s⁇remaining elements`|"
 * @param "anIterator" "sizable positionable iterator"
 * @returns "[0..∞]"
 *    The number of elements remaining in {@param "anIterator"}.
 * @category "Data Abstractions" "Iterators"
 */
Public abstract method "`|_'s⁇remaining elements`|"
	is [sizable positionable iterator]→[0..∞];
