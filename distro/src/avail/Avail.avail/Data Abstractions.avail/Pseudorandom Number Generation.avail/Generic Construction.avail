/*
 * Generic Construction.avail
 * Copyright © 1993-2022, The Avail Foundation, LLC.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of the copyright holder nor the names of the contributors
 *   may be used to endorse or promote products derived from this software
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

Module "Generic Construction"
Versions
	"Avail-1.6.1"
Uses
	"Abstract Random",
	"Foundation",
	"Mersenne Twister"
Names
	"a pRNG",
	"pRNG constructor",
	"pRNG constructor:=_"
Body

"pRNG constructor function" is a new heritable atom;

/**
 * Establish the specified {@type "function"} as the default means of acquiring
 * {@method "a pRNG" a pseudorandom number generator}.
 *
 * @method "pRNG constructor:=_"
 * @param "constructor" "[]→pRNG"
 * @returns "⊤"
 * @category "Data Abstractions" "Random"
 * @see {@method "a pRNG"}
 */
Public method "pRNG constructor:=_" is
[
	constructor : []→pRNG
|
	current fiber[pRNG constructor function] := constructor;
] : ⊤;

/**
 * Answer the {@type "function"} that {@method "a pRNG"} uses to produce a
 * {@type "pRNG" pseudorandom number generator}. If
 * {@method "pRNG constructor:=_"} has not been called by the
 * {@method "current fiber"} or an ancestor {@type "fiber"}, then answer the
 * implementation-dependent default {@type "function"}.
 *
 * @method "pRNG constructor"
 * @returns "[]→pRNG"
 * @category "Data Abstractions" "Random"
 */
Public method "pRNG constructor" is
[
	current fiber[pRNG constructor function] else [[a Mersenne Twister]]
];

Semantic restriction "pRNG constructor" is [[]→pRNG];

/**
 * Answer a {@type "pRNG" pseudorandom number generator} of the preferred type
 * by applying the function previously set by {@method "pRNG constructor:=_"}.
 *
 * @method "a pRNG"
 * @returns "pRNG"
 * @category "Data Abstractions" "Random"
 */
Public method "a pRNG" is
[
	pRNG constructor()
] : pRNG;
