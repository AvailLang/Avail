/*
 * Early Assertions.avail
 * Copyright © 1993-2018, The Avail Foundation, LLC.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of the copyright holder nor the names of the contributors
 *   may be used to endorse or promote products derived from this software
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

Module "Early Assertions"
Versions
	"1.1.0 DEV 2019-05-21"
Uses
	"Bootstrap",
	"Early Conditionals",
	"Early Definers"
Names
	"Assert:_",
	"Shouldn't happen"
Body

/**
 * Early assertion mechanism. This is obsolete once exceptions are available,
 * and should not be exported beyond this package.
 *
 * @method "Assert:_"
 * @param "predicate" "boolean"
 *        {@method "true"}.
 * @returns "⊤"
 * @category "Bootstrap" "Assertions"
 */
Public method "Assert:_" is
[
	predicate : boolean
|
	Assert: predicate ("(no description provided)");
] : ⊤;

/**
 * Strengthen the return type to ⊥ iff the assertion statement is statically
 * identifiable as a contradiction.
 *
 * @method "Assert:_"
 * @restricts "false's type's type"
 */
Semantic restriction "Assert:_" is
[
	contradiction : false's type's type
|
	⊥
];

/**
 * Strengthen the return type to ⊥ iff the assertion statement is statically
 * identifiable as a contradiction.
 *
 * @method "Assert:_(_)"
 * @restricts "false's type's type"
 * @restricts "string's type"
 */
Semantic restriction "Assert:_(_)" is
[
	contradiction : false's type's type,
	message : string's type
|
	⊥
];

/**
 * Declare that the code path that called this method should never be executed.
 * It results in an assertion failure. This is obsolete once exceptions are
 * available, and should not be exported beyond this package.
 *
 * @method "Shouldn't happen"
 * @returns "⊥"
 * @category "Bootstrap" "Assertions"
 */
Public method "Shouldn't happen" is
[
	Assert: false
		("This should not be possible; debug the VM and/or system library.")
] : ⊥;
