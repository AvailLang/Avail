/*
 * Primitives.avail
 * Copyright © 1993-2020, The Avail Foundation, LLC.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of the copyright holder nor the names of the contributors
 *   may be used to endorse or promote products derived from this software
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * GENERATED FILE
 * * Generator: com.avail.tools.bootstrap.BootstrapGenerator
 * * Last Generated: 8/6/20 11:35 PM
 *
 * DO NOT MODIFY MANUALLY. ALL MANUAL CHANGES WILL BE LOST.
 */

Module "Primitives"
Versions
	"1.4.0"
Extends
Uses
	"Origin"
Names
	"<_,_`…`|_>",
	"Abstract method_is_",
	"After the current module is unloaded,⁇do_",
	"Alias_to_",
	"Assert:_(_)",
	"Attempt to join_",
	"Breakpoint",
	"Cast|cast_into_else_",
	"Close module_",
	"Copy macros from_to_",
	"Crash:_",
	"Error:_",
	"Exit_if_",
	"Exit_with_if_",
	"Export_as a new name",
	"Forward method_is_",
	"Grammatical restriction_is_",
	"Immediately accept parse",
	"Immediately reject parse«silently|weakly|moderately|strongly⁇»!,expected:_",
	"In_millisecond|milliseconds,⁇invoke_with_,⁇forked at priority_",
	"Invoke_with_,⁇forked at priority_",
	"Invoke|invoke_with_",
	"Lexer_when_is_",
	"Macro_is«_,»_",
	"Mark for_character|characters of read ahead",
	"Park current fiber",
	"Print:_",
	"Remove current fiber[_]",
	"Remove_[_]",
	"Request termination of_",
	"Reset to mark",
	"Restart_",
	"Restart_with_",
	"Seal method_at_",
	"Seal method|methods_at existing definitions",
	"Semantic restriction_is_",
	"Set name of function implementation_to_",
	"Sleep for_millisecond|milliseconds",
	"Terminate current fiber",
	"Unname_from_",
	"Unpark_",
	"Yield current fiber",
	"[`…]→_",
	"_'s⁇_field",
	"_'s⁇arguments",
	"_'s⁇arity",
	"_'s⁇atom",
	"_'s⁇bindings",
	"_'s⁇caller",
	"_'s⁇character type number",
	"_'s⁇code point",
	"_'s⁇declaration",
	"_'s⁇declared exceptions",
	"_'s⁇declared type",
	"_'s⁇default type",
	"_'s⁇definitions",
	"_'s⁇element type",
	"_'s⁇element|member type",
	"_'s⁇entry points",
	"_'s⁇expression",
	"_'s⁇expressions",
	"_'s⁇function",
	"_'s⁇function type",
	"_'s⁇genuine lower bound",
	"_'s⁇genuine upper bound",
	"_'s⁇hash",
	"_'s⁇implementation",
	"_'s⁇instances",
	"_'s⁇issuing module",
	"_'s⁇key type",
	"_'s⁇keys",
	"_'s⁇leading types",
	"_'s⁇lexeme",
	"_'s⁇line number",
	"_'s⁇list",
	"_'s⁇literals",
	"_'s⁇lookup type",
	"_'s⁇maximum stack depth",
	"_'s⁇message",
	"_'s⁇method",
	"_'s⁇name",
	"_'s⁇name:=_",
	"_'s⁇names",
	"_'s⁇nybblecodes",
	"_'s⁇outer variables",
	"_'s⁇parameters'type",
	"_'s⁇permutation",
	"_'s⁇primitive name",
	"_'s⁇priority",
	"_'s⁇priority:=_",
	"_'s⁇program counter",
	"_'s⁇public names",
	"_'s⁇read type",
	"_'s⁇result",
	"_'s⁇result type",
	"_'s⁇return type",
	"_'s⁇seals",
	"_'s⁇semantic type",
	"_'s⁇stack",
	"_'s⁇stack pointer",
	"_'s⁇starting position",
	"_'s⁇statements",
	"_'s⁇target",
	"_'s⁇token",
	"_'s⁇type",
	"_'s⁇value",
	"_'s⁇value type",
	"_'s⁇values",
	"_'s⁇write type",
	"_++_",
	"_+_",
	"_+_→_",
	"_-_",
	"_<<_",
	"_<<_keeping_bits",
	"_<_",
	"_=_",
	"_>>_",
	"_[_.._]",
	"_[_]",
	"_[_]:=_",
	"_[_]→_",
	"_[_↔_]",
	"_\\_",
	"_^_",
	"_bit∧_",
	"_bit∨_",
	"_bit⊕_",
	"_has definition for_",
	"_has public name_",
	"_has result",
	"_has terminated",
	"_is a primitive",
	"_is a valid message",
	"_is open for side effects",
	"_is special",
	"_is unambiguous",
	"_mod_",
	"_occurrences⁇of_",
	"_parameterized by_",
	"_permuted by_",
	"_reinterpreted as bits",
	"_reinterpreted as double",
	"_reinterpreted as float",
	"_reversed",
	"_to_by_",
	"_«[_]»[_.._]→_",
	"_«[_]»→_",
	"_×_",
	"_÷_",
	"_↑is unassigned",
	"_→JSON",
	"_→block phrase",
	"_→character",
	"_→double",
	"_→extended integer",
	"_→float",
	"_→function",
	"_→list phrase",
	"_→literal phrase",
	"_→map",
	"_→object",
	"_→object type",
	"_→set",
	"_→statement phrase",
	"_→tuple",
	"_⇒_",
	"_∈_",
	"_∈current fiber",
	"_∩_",
	"_∪_",
	"_≤_",
	"_⊆_",
	"_⨉_^_",
	"`$_",
	"`$_@pc=_stack=_[_]caller=_",
	"``_``(_)@_:_",
	"`|_'s⁇local variables`|",
	"`|_'s⁇outer variables`|",
	"`|_'s⁇parameters`|",
	"`|_`|",
	"`|`|_`|`|",
	"`|message_'s⁇parameters`|",
	"`«(_:=_)`»",
	"`«[_`|Primitive__]:_^_`»",
	"`«_::=_`»",
	"`«_:=_`»",
	"`«_:_:=_`»",
	"`«_:_`»",
	"`«`$_:_`»",
	"`«`↑_`»",
	"`«module variable_(_)`»",
	"`«supercast(_::_)`»",
	"`«↓_`»",
	"`«↓_`»(_)",
	"`↑_",
	"all atoms for_",
	"arg`«_:_`»",
	"atom for_",
	"concatenate_",
	"constructor of_,⁇parameterized by_",
	"current fiber",
	"current fiber can reject a parse",
	"current fiber[_]",
	"current fiber[_]:=_",
	"current macro name",
	"current module",
	"current module's exported names",
	"current module's visible names",
	"enumeration of_",
	"fiber→_",
	"first-of-seq`«_`»",
	"function accepting_and returning_",
	"function from_and_",
	"high-precision timer value",
	"in_millisecond|milliseconds,⁇invoke_with_,⁇forked at priority_",
	"integer range from_(inclusive=_)to_(inclusive=_)",
	"invoke_with_,⁇forked at priority_",
	"literal token⇒_",
	"ln_",
	"message_contains groups",
	"method definition of_for_",
	"method exists named_",
	"method for_",
	"method_._,⁇parameterized by_",
	"milliseconds since the Epoch",
	"new anonymous module importing_",
	"new atom named_",
	"new explicit subclass atom named_",
	"new_[_]",
	"new_applying_",
	"new`↑_",
	"new⁇heritable«fiber-local»⁇atom named_",
	"next character",
	"non-canonical problem with_",
	"primfail`«_:_`»",
	"primitive description of_",
	"read_/write_",
	"restricted report and send_with_:_",
	"semantic restrictions for_given_",
	"send_with_:_",
	"seq`«_`»",
	"static method_._,⁇parameterized by_",
	"termination requested",
	"{_`|_}",
	"{_→_`|_}",
	"↓_",
	"∪_",
	"∪_[_.._]",
	"⌈_⌉",
	"⌊_⌋"
Body

