/*
 * File Types.avail
 * Copyright © 1993-2022, The Avail Foundation, LLC.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of the copyright holder nor the names of the contributors
 *   may be used to endorse or promote products derived from this software
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

Module "File Types"
Versions
	"Avail-1.6.0"
Uses
	"Foundation"
Names
	/* Types. */
	"file type",

	/* File types. */
	"directory",
	"regular file",
	"special file",
	"symbolic link"
Body

/**
 * Answer the atom that denotes a regular file.
 *
 * @method "regular atom"
 * @returns "atom"
 * @category "Files"
 */
"regular file" is a new atom;

/**
 * Answer the atom that denotes a directory.
 *
 * @method "regular atom"
 * @returns "atom"
 * @category "Files"
 */
"directory" is a new atom;

/**
 * Answer the atom that denotes a symbolic link.
 *
 * @method "symbolic link"
 * @returns "atom"
 * @category "Files"
 */
"symbolic link" is a new atom;

/**
 * Answer the atom that denotes a special file.
 *
 * @method "special file"
 * @returns "atom"
 * @category "Files"
 */
"special file" is a new atom;

/**
 * A file type is one of {@method "regular file"}, {@method "directory"},
 * {@method "symbolic link"}, or {@method "special file"}.
 *
 * @type "file type"
 * @category "Files"
 */
[
	e ::= {regular file, directory, symbolic link, special file}ᵀ;
	Public method "file type" is [e];
]();
