/*
 * Synchronous.avail
 * Copyright © 1993-2018, The Avail Foundation, LLC.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of the copyright holder nor the names of the contributors
 *   may be used to endorse or promote products derived from this software
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

Module "Synchronous"
Versions
	"1.3.0 DEV 2019-07-16"
Uses
	"Client",
	"Foundation",
	"Primitives"
Names
	/* Accepting. */
	"accept a new connection«named_»on_"
Body

/* The default name for unspecified optional names. */
defaultName ::= "«unnamed»";

/**
 * Synchronously accept an incoming connection on the specified {@type "server
 * socket"}. Answer the resultant {@type "client socket"}.
 *
 * @method "accept a new connection«named_»on_"
 * @param "optionalName" "nonempty string?"
 *        An optional string that describes the purpose of the client socket at
 *        a high level, provided for debugging purposes only. If not specified,
 *        then the default name {@code "«unnamed»"} is used.
 * @param "s" "server socket"
 * @returns "client socket"
 *          The newly connected client socket.
 * @category "Synchronous IO" "Networking" "Sockets"
 */
Public method "accept a new connection«named_»on_" is
[
	optionalName : nonempty string?,
	s : server socket
|
	clientName ::= optionalName[1] else [defaultName];
	semName ::= format "accept semaphore for ‘①’" with s's name;
	sem ::= a semaphore named semName with 0 out of 1 permits;
	client : client socket;
	killer : exception;
	Ignore: a fiber waiting until s accepts a new connection named clientName,
		on success doing [c : client socket | client := c; Signal sem;]
		on failure doing [e : exception | killer := e; Signal sem;];
	Await sem;
	If killer is assigned then [Raise killer];
	client
] : client socket;
