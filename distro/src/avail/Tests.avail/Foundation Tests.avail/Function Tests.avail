/*
 * Function Tests.avail
 * Copyright © 1993-2018, The Avail Foundation, LLC.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of the copyright holder nor the names of the contributors
 *   may be used to endorse or promote products derived from this software
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

Module "Function Tests"
Versions
	"1.2.0 DEV 2019-07-09"
Uses
	"Common"
Names
	"function test suite"
Body

"function test suite" is a new atom;
New test suite function test suite extends foundation test suite;

Test "partial application basics" in function test suite is
[
	f ::= [a : integer, b : string, c : float | "ok"];
	g ::= f(_,"foo",_);
	Require: integer = g's type[1];
	Require: float = g's type[2];
	Require: "ok" = g(10, 1.2f);

	h ::= f(15, _, 1.2f);
	Require: string = h's type[1];
	Require: "ok" = h("cheese");

	i ::= f(15, …);
	Require: string = i's type[1];
	Require: float = i's type[2];
	Require: "ok" = i("x", 2.5f);

	j ::= f(…, 1.7f);
	Require: integer = j's type[1];
	Require: string = j's type[2];
	Require: "ok" = j(45, "x");
];
