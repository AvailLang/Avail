/*
 * Multiplication Tests.avail
 * Copyright © 1993-2021, The Avail Foundation, LLC.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of the copyright holder nor the names of the contributors
 *   may be used to endorse or promote products derived from this software
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

Module "Multiplication Tests"
Versions
	"1.5.0"
Uses
	"Primitive Test Common"
Body

Test "Multiplication ok" in primitive numbers test suite is
[
	For each i from 1 to 10 do
	[
		Require: i × 0 = 0;
		Require: i × 1 = i;
		Require: i × -1 = -i;
		Require: -i × -i = i × i;
		Require: i × ∞ = ∞;
		For each j from 1 to 10 do [Require: i × j = j × i; ];
	];
	Require: 2 × 2 = 4;
	Require: 9 × 9 = 81;
	Require: 65536 × 65536 = 4294967296;
	Require: 4294967296 × 4294967296 = 18446744073709551616;
	Require: 18446744073709551616 × 18446744073709551616
		= 340282366920938463463374607431768211456;
	Require: 65536 × -65536 = -4294967296;
	Require: 4294967296 × -4294967296 = -18446744073709551616;
	Require: 18446744073709551616 × -18446744073709551616
		= -340282366920938463463374607431768211456;
	Require: 2.0f × 2.0f = 4.0f;
	Require: 2.0 × 2.0 = 4.0;
	Require: 2 × 2.0f = 4.0f;
	Require: 2 × 2.0 = 4.0;
	Require: 2.0f × 2.0 = 4.0;
];

Test "Multiplication fails with cannot-multiply-zero-and-infinity exception" in primitive numbers test suite is
[
	/* Hide ∞ from the compiler. */
	v : extended integer := ∞;
	Require: [0 × v] raises cannot-multiply-zero-and-infinity exception;
	Require: [v × 0] raises cannot-multiply-zero-and-infinity exception;
	Require: [0 × -v] raises cannot-multiply-zero-and-infinity exception;
	Require: [-v × 0] raises cannot-multiply-zero-and-infinity exception;
];

