/*
 * CreateFunction Tests.avail
 * Copyright © 1993-2022, The Avail Foundation, LLC.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of the copyright holder nor the names of the contributors
 *   may be used to endorse or promote products derived from this software
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

Module "CreateFunction Tests"
Versions
	"Avail-1.6.1"
Uses
	"Primitive Test Common"
Body

Test "CreateFunction ok" in primitive functions test suite is
[
	x : integer := 5;
    f1 ::= [y : integer | x + y];
    Require: f1(10) = 15;
    z : integer := 50;
    f2 ::= function from f1's implementation and <↑z>;
    Cast f2 into
    [
    	f : [integer]→integer
    |
    	Require: f(10) = 60;
    ];
    f2b ::= function from f1's implementation and <↑x>;
	Cast f2b into
	[
		f : [integer]→integer
	|
		Require: f(10) = 15;
	];

    k ::= [u : [1..10] := 3; u]();
    f3 ::= [y : integer | k + y];
    Require: f3(10) = 13;
    f4 ::= function from f3's implementation and <8>;
    Cast f4 into
    [
    	f : [integer]→integer
    |
    	Require: f(10) = 18;
    ];

    f5 ::= [mm : integer, nn : integer | mm + mm + nn];
    Require: f5(6, 7) = 19;
    f6 ::= function from f5's implementation and <>;
    Cast f6 into
	[
		f : [integer, integer]→integer
	|
		Require: f(6, 7) = 19;
	];
    Cast f6 into
    [
    	f : [integer, integer]→integer
	|
		Require: f(10, 10) = 30;
    ];
];

Test "CreateFunction fails with wrong-outers exception" in primitive functions test suite if supported is
[
	Skip test;
]
must raise wrong-outers exception;

