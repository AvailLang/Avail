/*
 * CreateMap Tests.avail
 * Copyright © 1993-2020, The Avail Foundation, LLC.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of the copyright holder nor the names of the contributors
 *   may be used to endorse or promote products derived from this software
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

Module "CreateMap Tests"
Versions
	"1.4.0"
Uses
	"Primitive Test Common"
Body

Test "CreateMap ok" in primitive maps test suite is
[
    // All string tuples
	Require: <<"avail", "language">> →map = {"avail" → "language"};
	Require: <<"avail", "language">, <"bvail", "imaginary language">>
		→map = {"avail" → "language", "bvail" → "imaginary language"};

	// All integer tuples
	Require: <<1, 2>, <2, 3>> →map = {1 → 2, 2 → 3};

	// expressions in tuple
	Require: <<"one plus two", 1 + 2>> →map = {"one plus two"→ 3};
	Require: <<"one plus two", 1 + 2>> →map = {"one plus two"→ 1 + 2};

	// All float tuples
	Require: <<"one point eight, seven", 1.87>>
		→map = {"one point eight, seven" → 1.87};

	// Extreme numbers
	Require:
	<
		<"one", 1>,
		<"one quintillian", 1000000000000000000>,
		<"infinity", ∞>,
		<"negative infinity", -∞>
	> →map = {
		"one" → 1,
		"one quintillian" → 1000000000000000000,
		"infinity" → ∞,
		"negative infinity" → -∞
	};

	// Mixed type tuples
	Require: <<1, "one">, <2, "two">> →map = {1 → "one", 2 → "two"};

	// Differently typed tuples
	Require: <<"number", 5>, <"anything", "cat">>
		→map = {"number" → 5, "anything" → "cat"};

	// Tuple values
	Require:
	<
		<"kids", <"jenny", "jack", "jill">>,
		<"ages", <1, 7, 9>>,
		<"random debris", <∞, -∞, "moss", 11, 5.9>>
	> →map = {
		"kids" → <"jenny", "jack", "jill">,
		"ages" → <1, 7, 9>,
		"random debris" → <∞, -∞, "moss", 11, 5.9>
	};

	// Map values, set values, CreateMap value expression
	Require:
	<
		<"numbers", {"one" → 1, "two" → 2, "three" → 3}>,
		<"letters", {"a", "b", "c"}>,
		<"things", <<"my cat", "sally">,<"your age", 100>> →map>
	> →map = {
		"numbers" → {"one" → 1, "two" → 2, "three" → 3},
		"letters" → {"a", "b", "c"},
		"things" → {"my cat" → "sally", "your age" → 100}
	};
];
