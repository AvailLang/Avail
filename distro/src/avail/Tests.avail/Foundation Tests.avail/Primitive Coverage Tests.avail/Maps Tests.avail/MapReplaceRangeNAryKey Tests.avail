/*
 * MapReplaceRangeNAryKey Tests.avail
 * Copyright © 1993-2021, The Avail Foundation, LLC.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of the copyright holder nor the names of the contributors
 *   may be used to endorse or promote products derived from this software
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

Module "MapReplaceRangeNAryKey Tests"
Versions
	"1.5.0"
Uses
	"Primitive Test Common"
Body

m1 : map := {"1"→1,"2"→2,"3"→{"foo"→<3,3>,"boo"→<33,33,33>},"4"→4};

Test "MapReplaceRangeNAryKey ok" in primitive maps test suite is
[
	m2 ::= {"1"→1,"2"→2,"3"→{"foo"→<3,3>,"boo"→<33,9,9,33>},"4"→4};
	m3 ::= m1["3"]["boo"][2..2]→<9,9>;
	Require: m3 = m2;

	// TODO: more tests of slices at various spots in the innermost tuple
];

Test "MapReplaceRangeNAryKey fails with subscript-out-of-bounds exception"
in primitive maps test suite is
[
	m1["3"]["boo"][2..4]→<9,9,9>
]
must raise subscript-out-of-bounds exception;

Test "MapReplaceRangeNAryKey fails with incorrect-argument-type exception"
in primitive maps test suite is
[
	m1["3"]["boo"][2][2..2]→<9,9,9>
]
must raise incorrect-argument-type exception;

Test "MapReplaceRangeNAryKey fails with key-not-found exception"
in primitive maps test suite is
[
	m1["boo"][2][2..2]→<9,9>
]
must raise key-not-found exception;

Test "MapReplaceRangeNAryKey fails with negative-size exception"
in primitive maps test suite is
[
	m1["3"]["boo"][11..4]→<9,9,9>
	// TODO: verify smallest negative range raises this exception
]
must raise negative-size exception;

